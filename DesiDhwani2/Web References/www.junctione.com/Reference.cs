//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DesiDhwani2.www.junctione.com {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Binding", Namespace="urn:Magento")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductDownloadableLinkSampleEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductDownloadableLinkFileInfoEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductDownloadableLinkEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(giftMessageAssociativeProductsEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductTagListEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(shoppingCartPaymentMethodResponseEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(shoppingCartShippingMethodEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(shoppingCartCustomerAddressEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(shoppingCartLicenseEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(shoppingCartTotalsEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(shoppingCartItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogInventoryStockItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderCreditmemoCommentEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderCreditmemoItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderInvoiceCommentEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderInvoiceItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(orderItemIdQty))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderShipmentCommentEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderShipmentTrackEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderShipmentItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderStatusHistoryEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderItemEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(salesOrderListEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductCustomOptionValueAddEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductCustomOptionValueListEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductCustomOptionListEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductCustomOptionTypesEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductCustomOptionAdditionalFieldsEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductLinkAttributeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductAttributeMediaTypeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductTypeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductAttributeOptionLabelEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductAttributeFrontendLabelEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductAttributeSetEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(associativeMultiEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductTierPriceEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogProductEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogAttributeOptionEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogAttributeEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogAssignedProduct))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogCategoryEntityNoChildren))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(catalogCategoryEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(customerGroupEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(complexFilter))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(directoryRegionEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(directoryCountryEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(existsFaltureEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(apiMethodEntity))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(apiEntity))]
    public partial class MagentoService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public MagentoService() {
            this.Url = "http://www.junctione.com/index.php/api/v2_soap/index/";
        }
        
        public MagentoService(string url) {
            this.Url = url;
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("endSessionReturn")]
        public bool endSession(string sessionId) {
            object[] results = this.Invoke("endSession", new object[] {
                        sessionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginendSession(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("endSession", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndendSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public string login(string username, string apiKey) {
            object[] results = this.Invoke("login", new object[] {
                        username,
                        apiKey});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginlogin(string username, string apiKey, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("login", new object[] {
                        username,
                        apiKey}, callback, asyncState);
        }
        
        /// <remarks/>
        public string Endlogin(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("startSessionReturn")]
        public string startSession() {
            object[] results = this.Invoke("startSession", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstartSession(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("startSession", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string EndstartSession(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("resourcesReturn")]
        public apiEntity[] resources(string sessionId) {
            object[] results = this.Invoke("resources", new object[] {
                        sessionId});
            return ((apiEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginresources(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("resources", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public apiEntity[] Endresources(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((apiEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("globalFaultsReturn")]
        public existsFaltureEntity[] globalFaults(string sessionId) {
            object[] results = this.Invoke("globalFaults", new object[] {
                        sessionId});
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginglobalFaults(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("globalFaults", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public existsFaltureEntity[] EndglobalFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("resourceFaultsReturn")]
        public existsFaltureEntity[] resourceFaults(string resourceName, string sessionId) {
            object[] results = this.Invoke("resourceFaults", new object[] {
                        resourceName,
                        sessionId});
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginresourceFaults(string resourceName, string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("resourceFaults", new object[] {
                        resourceName,
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public existsFaltureEntity[] EndresourceFaults(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((existsFaltureEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("stores")]
        public storeEntity[] storeList(string sessionId) {
            object[] results = this.Invoke("storeList", new object[] {
                        sessionId});
            return ((storeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstoreList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storeList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public storeEntity[] EndstoreList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public storeEntity storeInfo(string sessionId, string storeId) {
            object[] results = this.Invoke("storeInfo", new object[] {
                        sessionId,
                        storeId});
            return ((storeEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginstoreInfo(string sessionId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("storeInfo", new object[] {
                        sessionId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public storeEntity EndstoreInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((storeEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public magentoInfoEntity magentoInfo(string sessionId) {
            object[] results = this.Invoke("magentoInfo", new object[] {
                        sessionId});
            return ((magentoInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmagentoInfo(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("magentoInfo", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public magentoInfoEntity EndmagentoInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((magentoInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("countries")]
        public directoryCountryEntity[] directoryCountryList(string sessionId) {
            object[] results = this.Invoke("directoryCountryList", new object[] {
                        sessionId});
            return ((directoryCountryEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindirectoryCountryList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("directoryCountryList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public directoryCountryEntity[] EnddirectoryCountryList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((directoryCountryEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("countries")]
        public directoryRegionEntity[] directoryRegionList(string sessionId, string country) {
            object[] results = this.Invoke("directoryRegionList", new object[] {
                        sessionId,
                        country});
            return ((directoryRegionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegindirectoryRegionList(string sessionId, string country, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("directoryRegionList", new object[] {
                        sessionId,
                        country}, callback, asyncState);
        }
        
        /// <remarks/>
        public directoryRegionEntity[] EnddirectoryRegionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((directoryRegionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public customerCustomerEntity[] customerCustomerList(string sessionId, filters filters) {
            object[] results = this.Invoke("customerCustomerList", new object[] {
                        sessionId,
                        filters});
            return ((customerCustomerEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerCustomerList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerCustomerEntity[] EndcustomerCustomerList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerCustomerEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int customerCustomerCreate(string sessionId, customerCustomerEntityToCreate customerData) {
            object[] results = this.Invoke("customerCustomerCreate", new object[] {
                        sessionId,
                        customerData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerCreate(string sessionId, customerCustomerEntityToCreate customerData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerCustomerCreate", new object[] {
                        sessionId,
                        customerData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcustomerCustomerCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("customerInfo")]
        public customerCustomerEntity customerCustomerInfo(string sessionId, int customerId, string[] attributes) {
            object[] results = this.Invoke("customerCustomerInfo", new object[] {
                        sessionId,
                        customerId,
                        attributes});
            return ((customerCustomerEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerInfo(string sessionId, int customerId, string[] attributes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerCustomerInfo", new object[] {
                        sessionId,
                        customerId,
                        attributes}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerCustomerEntity EndcustomerCustomerInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerCustomerEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool customerCustomerUpdate(string sessionId, int customerId, customerCustomerEntityToCreate customerData) {
            object[] results = this.Invoke("customerCustomerUpdate", new object[] {
                        sessionId,
                        customerId,
                        customerData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerUpdate(string sessionId, int customerId, customerCustomerEntityToCreate customerData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerCustomerUpdate", new object[] {
                        sessionId,
                        customerId,
                        customerData}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerCustomerUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool customerCustomerDelete(string sessionId, int customerId) {
            object[] results = this.Invoke("customerCustomerDelete", new object[] {
                        sessionId,
                        customerId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerCustomerDelete(string sessionId, int customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerCustomerDelete", new object[] {
                        sessionId,
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerCustomerDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public customerGroupEntity[] customerGroupList(string sessionId) {
            object[] results = this.Invoke("customerGroupList", new object[] {
                        sessionId});
            return ((customerGroupEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerGroupList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerGroupList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerGroupEntity[] EndcustomerGroupList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerGroupEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public customerAddressEntityItem[] customerAddressList(string sessionId, int customerId) {
            object[] results = this.Invoke("customerAddressList", new object[] {
                        sessionId,
                        customerId});
            return ((customerAddressEntityItem[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressList(string sessionId, int customerId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerAddressList", new object[] {
                        sessionId,
                        customerId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerAddressEntityItem[] EndcustomerAddressList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerAddressEntityItem[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int customerAddressCreate(string sessionId, int customerId, customerAddressEntityCreate addressData) {
            object[] results = this.Invoke("customerAddressCreate", new object[] {
                        sessionId,
                        customerId,
                        addressData});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressCreate(string sessionId, int customerId, customerAddressEntityCreate addressData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerAddressCreate", new object[] {
                        sessionId,
                        customerId,
                        addressData}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcustomerAddressCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public customerAddressEntityItem customerAddressInfo(string sessionId, int addressId) {
            object[] results = this.Invoke("customerAddressInfo", new object[] {
                        sessionId,
                        addressId});
            return ((customerAddressEntityItem)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressInfo(string sessionId, int addressId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerAddressInfo", new object[] {
                        sessionId,
                        addressId}, callback, asyncState);
        }
        
        /// <remarks/>
        public customerAddressEntityItem EndcustomerAddressInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((customerAddressEntityItem)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public bool customerAddressUpdate(string sessionId, int addressId, customerAddressEntityCreate addressData) {
            object[] results = this.Invoke("customerAddressUpdate", new object[] {
                        sessionId,
                        addressId,
                        addressData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressUpdate(string sessionId, int addressId, customerAddressEntityCreate addressData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerAddressUpdate", new object[] {
                        sessionId,
                        addressId,
                        addressData}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerAddressUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public bool customerAddressDelete(string sessionId, int addressId) {
            object[] results = this.Invoke("customerAddressDelete", new object[] {
                        sessionId,
                        addressId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincustomerAddressDelete(string sessionId, int addressId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("customerAddressDelete", new object[] {
                        sessionId,
                        addressId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcustomerAddressDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogCategoryCurrentStore(string sessionId, string storeView) {
            object[] results = this.Invoke("catalogCategoryCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogCategoryCurrentStore(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("tree")]
        public catalogCategoryTree catalogCategoryTree(string sessionId, string parentId, string storeView) {
            object[] results = this.Invoke("catalogCategoryTree", new object[] {
                        sessionId,
                        parentId,
                        storeView});
            return ((catalogCategoryTree)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryTree(string sessionId, string parentId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryTree", new object[] {
                        sessionId,
                        parentId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogCategoryTree EndcatalogCategoryTree(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogCategoryTree)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("tree")]
        public catalogCategoryEntityNoChildren[] catalogCategoryLevel(string sessionId, string website, string storeView, string parentCategory) {
            object[] results = this.Invoke("catalogCategoryLevel", new object[] {
                        sessionId,
                        website,
                        storeView,
                        parentCategory});
            return ((catalogCategoryEntityNoChildren[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryLevel(string sessionId, string website, string storeView, string parentCategory, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryLevel", new object[] {
                        sessionId,
                        website,
                        storeView,
                        parentCategory}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogCategoryEntityNoChildren[] EndcatalogCategoryLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogCategoryEntityNoChildren[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public catalogCategoryInfo catalogCategoryInfo(string sessionId, int categoryId, string storeView, string[] attributes) {
            object[] results = this.Invoke("catalogCategoryInfo", new object[] {
                        sessionId,
                        categoryId,
                        storeView,
                        attributes});
            return ((catalogCategoryInfo)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryInfo(string sessionId, int categoryId, string storeView, string[] attributes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryInfo", new object[] {
                        sessionId,
                        categoryId,
                        storeView,
                        attributes}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogCategoryInfo EndcatalogCategoryInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogCategoryInfo)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("attribute_id")]
        public int catalogCategoryCreate(string sessionId, int parentId, catalogCategoryEntityCreate categoryData, string storeView) {
            object[] results = this.Invoke("catalogCategoryCreate", new object[] {
                        sessionId,
                        parentId,
                        categoryData,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryCreate(string sessionId, int parentId, catalogCategoryEntityCreate categoryData, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryCreate", new object[] {
                        sessionId,
                        parentId,
                        categoryData,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogCategoryCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("id")]
        public bool catalogCategoryUpdate(string sessionId, int categoryId, catalogCategoryEntityCreate categoryData, string storeView) {
            object[] results = this.Invoke("catalogCategoryUpdate", new object[] {
                        sessionId,
                        categoryId,
                        categoryData,
                        storeView});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryUpdate(string sessionId, int categoryId, catalogCategoryEntityCreate categoryData, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryUpdate", new object[] {
                        sessionId,
                        categoryId,
                        categoryData,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("id")]
        public bool catalogCategoryMove(string sessionId, int categoryId, int parentId, string afterId) {
            object[] results = this.Invoke("catalogCategoryMove", new object[] {
                        sessionId,
                        categoryId,
                        parentId,
                        afterId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryMove(string sessionId, int categoryId, int parentId, string afterId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryMove", new object[] {
                        sessionId,
                        categoryId,
                        parentId,
                        afterId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryMove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryDelete(string sessionId, int categoryId) {
            object[] results = this.Invoke("catalogCategoryDelete", new object[] {
                        sessionId,
                        categoryId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryDelete(string sessionId, int categoryId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryDelete", new object[] {
                        sessionId,
                        categoryId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAssignedProduct[] catalogCategoryAssignedProducts(string sessionId, int categoryId) {
            object[] results = this.Invoke("catalogCategoryAssignedProducts", new object[] {
                        sessionId,
                        categoryId});
            return ((catalogAssignedProduct[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAssignedProducts(string sessionId, int categoryId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryAssignedProducts", new object[] {
                        sessionId,
                        categoryId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAssignedProduct[] EndcatalogCategoryAssignedProducts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAssignedProduct[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryAssignProduct(string sessionId, int categoryId, string product, string position, string identifierType) {
            object[] results = this.Invoke("catalogCategoryAssignProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAssignProduct(string sessionId, int categoryId, string product, string position, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryAssignProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryAssignProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryUpdateProduct(string sessionId, int categoryId, string product, string position, string identifierType) {
            object[] results = this.Invoke("catalogCategoryUpdateProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryUpdateProduct(string sessionId, int categoryId, string product, string position, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryUpdateProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        position,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryUpdateProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogCategoryRemoveProduct(string sessionId, int categoryId, string product, string identifierType) {
            object[] results = this.Invoke("catalogCategoryRemoveProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryRemoveProduct(string sessionId, int categoryId, string product, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryRemoveProduct", new object[] {
                        sessionId,
                        categoryId,
                        product,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogCategoryRemoveProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogCategoryAttributeCurrentStore(string sessionId, string storeView) {
            object[] results = this.Invoke("catalogCategoryAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAttributeCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogCategoryAttributeCurrentStore(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeEntity[] catalogCategoryAttributeList(string sessionId) {
            object[] results = this.Invoke("catalogCategoryAttributeList", new object[] {
                        sessionId});
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAttributeList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryAttributeList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeEntity[] EndcatalogCategoryAttributeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeOptionEntity[] catalogCategoryAttributeOptions(string sessionId, string attributeId, string storeView) {
            object[] results = this.Invoke("catalogCategoryAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView});
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogCategoryAttributeOptions(string sessionId, string attributeId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogCategoryAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeOptionEntity[] EndcatalogCategoryAttributeOptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogProductCurrentStore(string sessionId, string storeView) {
            object[] results = this.Invoke("catalogProductCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductCurrentStore(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public catalogProductEntity[] catalogProductList(string sessionId, filters filters, string storeView) {
            object[] results = this.Invoke("catalogProductList", new object[] {
                        sessionId,
                        filters,
                        storeView});
            return ((catalogProductEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductList(string sessionId, filters filters, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductList", new object[] {
                        sessionId,
                        filters,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductEntity[] EndcatalogProductList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("info")]
        public catalogProductReturnEntity catalogProductInfo(string sessionId, string productId, string storeView, catalogProductRequestAttributes attributes, string identifierType) {
            object[] results = this.Invoke("catalogProductInfo", new object[] {
                        sessionId,
                        productId,
                        storeView,
                        attributes,
                        identifierType});
            return ((catalogProductReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductInfo(string sessionId, string productId, string storeView, catalogProductRequestAttributes attributes, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductInfo", new object[] {
                        sessionId,
                        productId,
                        storeView,
                        attributes,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductReturnEntity EndcatalogProductInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductCreate(string sessionId, string type, string set, string sku, catalogProductCreateEntity productData, string storeView) {
            object[] results = this.Invoke("catalogProductCreate", new object[] {
                        sessionId,
                        type,
                        set,
                        sku,
                        productData,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCreate(string sessionId, string type, string set, string sku, catalogProductCreateEntity productData, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCreate", new object[] {
                        sessionId,
                        type,
                        set,
                        sku,
                        productData,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductUpdate(string sessionId, string product, catalogProductCreateEntity productData, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductUpdate", new object[] {
                        sessionId,
                        product,
                        productData,
                        storeView,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductUpdate(string sessionId, string product, catalogProductCreateEntity productData, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductUpdate", new object[] {
                        sessionId,
                        product,
                        productData,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductMultiUpdate(string sessionId, string[] productIds, catalogProductCreateEntity[] productData, string store, string identifierType) {
            object[] results = this.Invoke("catalogProductMultiUpdate", new object[] {
                        sessionId,
                        productIds,
                        productData,
                        store,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductMultiUpdate(string sessionId, string[] productIds, catalogProductCreateEntity[] productData, string store, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductMultiUpdate", new object[] {
                        sessionId,
                        productIds,
                        productData,
                        store,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductMultiUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductSetSpecialPrice(string sessionId, string product, string specialPrice, string fromDate, string toDate, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductSetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        specialPrice,
                        fromDate,
                        toDate,
                        storeView,
                        identifierType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductSetSpecialPrice(string sessionId, string product, string specialPrice, string fromDate, string toDate, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductSetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        specialPrice,
                        fromDate,
                        toDate,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductSetSpecialPrice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductSpecialPriceReturnEntity catalogProductGetSpecialPrice(string sessionId, string product, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductGetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        storeView,
                        identifierType});
            return ((catalogProductSpecialPriceReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductGetSpecialPrice(string sessionId, string product, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductGetSpecialPrice", new object[] {
                        sessionId,
                        product,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductSpecialPriceReturnEntity EndcatalogProductGetSpecialPrice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductSpecialPriceReturnEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductDelete(string sessionId, string product, string identifierType) {
            object[] results = this.Invoke("catalogProductDelete", new object[] {
                        sessionId,
                        product,
                        identifierType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductDelete(string sessionId, string product, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductDelete", new object[] {
                        sessionId,
                        product,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductDelete(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogProductAttributeCurrentStore(string sessionId, string storeView) {
            object[] results = this.Invoke("catalogProductAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeCurrentStore(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeEntity[] catalogProductListOfAdditionalAttributes(string sessionId, string productType, string attributeSetId) {
            object[] results = this.Invoke("catalogProductListOfAdditionalAttributes", new object[] {
                        sessionId,
                        productType,
                        attributeSetId});
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductListOfAdditionalAttributes(string sessionId, string productType, string attributeSetId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductListOfAdditionalAttributes", new object[] {
                        sessionId,
                        productType,
                        attributeSetId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeEntity[] EndcatalogProductListOfAdditionalAttributes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeEntity[] catalogProductAttributeList(string sessionId, int setId) {
            object[] results = this.Invoke("catalogProductAttributeList", new object[] {
                        sessionId,
                        setId});
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeList(string sessionId, int setId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeList", new object[] {
                        sessionId,
                        setId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeEntity[] EndcatalogProductAttributeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeOptionEntity[] catalogProductAttributeOptions(string sessionId, string attributeId, string storeView) {
            object[] results = this.Invoke("catalogProductAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView});
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeOptions(string sessionId, string attributeId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeOptions", new object[] {
                        sessionId,
                        attributeId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeOptionEntity[] EndcatalogProductAttributeOptions(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("setId")]
        public int catalogProductAttributeSetCreate(string sessionId, string attributeSetName, string skeletonSetId) {
            object[] results = this.Invoke("catalogProductAttributeSetCreate", new object[] {
                        sessionId,
                        attributeSetName,
                        skeletonSetId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetCreate(string sessionId, string attributeSetName, string skeletonSetId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetCreate", new object[] {
                        sessionId,
                        attributeSetName,
                        skeletonSetId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeSetCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("isRemoved")]
        public bool catalogProductAttributeSetRemove(string sessionId, string attributeSetId, string forceProductsRemove) {
            object[] results = this.Invoke("catalogProductAttributeSetRemove", new object[] {
                        sessionId,
                        attributeSetId,
                        forceProductsRemove});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetRemove(string sessionId, string attributeSetId, string forceProductsRemove, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetRemove", new object[] {
                        sessionId,
                        attributeSetId,
                        forceProductsRemove}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeSetRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductAttributeSetEntity[] catalogProductAttributeSetList(string sessionId) {
            object[] results = this.Invoke("catalogProductAttributeSetList", new object[] {
                        sessionId});
            return ((catalogProductAttributeSetEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductAttributeSetEntity[] EndcatalogProductAttributeSetList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductAttributeSetEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("isAdded")]
        public bool catalogProductAttributeSetAttributeAdd(string sessionId, string attributeId, string attributeSetId, string attributeGroupId, string sortOrder) {
            object[] results = this.Invoke("catalogProductAttributeSetAttributeAdd", new object[] {
                        sessionId,
                        attributeId,
                        attributeSetId,
                        attributeGroupId,
                        sortOrder});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetAttributeAdd(string sessionId, string attributeId, string attributeSetId, string attributeGroupId, string sortOrder, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetAttributeAdd", new object[] {
                        sessionId,
                        attributeId,
                        attributeSetId,
                        attributeGroupId,
                        sortOrder}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeSetAttributeAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("isRemoved")]
        public bool catalogProductAttributeSetAttributeRemove(string sessionId, string attributeId, string attributeSetId) {
            object[] results = this.Invoke("catalogProductAttributeSetAttributeRemove", new object[] {
                        sessionId,
                        attributeId,
                        attributeSetId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetAttributeRemove(string sessionId, string attributeId, string attributeSetId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetAttributeRemove", new object[] {
                        sessionId,
                        attributeId,
                        attributeSetId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeSetAttributeRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductAttributeSetGroupAdd(string sessionId, string attributeSetId, string groupName) {
            object[] results = this.Invoke("catalogProductAttributeSetGroupAdd", new object[] {
                        sessionId,
                        attributeSetId,
                        groupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetGroupAdd(string sessionId, string attributeSetId, string groupName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetGroupAdd", new object[] {
                        sessionId,
                        attributeSetId,
                        groupName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeSetGroupAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeSetGroupRename(string sessionId, string groupId, string groupName) {
            object[] results = this.Invoke("catalogProductAttributeSetGroupRename", new object[] {
                        sessionId,
                        groupId,
                        groupName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetGroupRename(string sessionId, string groupId, string groupName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetGroupRename", new object[] {
                        sessionId,
                        groupId,
                        groupName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeSetGroupRename(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeSetGroupRemove(string sessionId, string attributeGroupId) {
            object[] results = this.Invoke("catalogProductAttributeSetGroupRemove", new object[] {
                        sessionId,
                        attributeGroupId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeSetGroupRemove(string sessionId, string attributeGroupId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeSetGroupRemove", new object[] {
                        sessionId,
                        attributeGroupId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeSetGroupRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogAttributeOptionEntity[] catalogProductAttributeTypes(string sessionId) {
            object[] results = this.Invoke("catalogProductAttributeTypes", new object[] {
                        sessionId});
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeTypes(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeTypes", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogAttributeOptionEntity[] EndcatalogProductAttributeTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogAttributeOptionEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductAttributeCreate(string sessionId, catalogProductAttributeEntityToCreate data) {
            object[] results = this.Invoke("catalogProductAttributeCreate", new object[] {
                        sessionId,
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeCreate(string sessionId, catalogProductAttributeEntityToCreate data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeCreate", new object[] {
                        sessionId,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeRemove(string sessionId, string attribute) {
            object[] results = this.Invoke("catalogProductAttributeRemove", new object[] {
                        sessionId,
                        attribute});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeRemove(string sessionId, string attribute, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeRemove", new object[] {
                        sessionId,
                        attribute}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductAttributeEntity catalogProductAttributeInfo(string sessionId, string attribute) {
            object[] results = this.Invoke("catalogProductAttributeInfo", new object[] {
                        sessionId,
                        attribute});
            return ((catalogProductAttributeEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeInfo(string sessionId, string attribute, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeInfo", new object[] {
                        sessionId,
                        attribute}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductAttributeEntity EndcatalogProductAttributeInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductAttributeEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeUpdate(string sessionId, string attribute, catalogProductAttributeEntityToUpdate data) {
            object[] results = this.Invoke("catalogProductAttributeUpdate", new object[] {
                        sessionId,
                        attribute,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeUpdate(string sessionId, string attribute, catalogProductAttributeEntityToUpdate data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeUpdate", new object[] {
                        sessionId,
                        attribute,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeAddOption(string sessionId, string attribute, catalogProductAttributeOptionEntityToAdd data) {
            object[] results = this.Invoke("catalogProductAttributeAddOption", new object[] {
                        sessionId,
                        attribute,
                        data});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeAddOption(string sessionId, string attribute, catalogProductAttributeOptionEntityToAdd data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeAddOption", new object[] {
                        sessionId,
                        attribute,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeAddOption(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeRemoveOption(string sessionId, string attribute, string optionId) {
            object[] results = this.Invoke("catalogProductAttributeRemoveOption", new object[] {
                        sessionId,
                        attribute,
                        optionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeRemoveOption(string sessionId, string attribute, string optionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeRemoveOption", new object[] {
                        sessionId,
                        attribute,
                        optionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeRemoveOption(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductTypeEntity[] catalogProductTypeList(string sessionId) {
            object[] results = this.Invoke("catalogProductTypeList", new object[] {
                        sessionId});
            return ((catalogProductTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTypeList(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductTypeList", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductTypeEntity[] EndcatalogProductTypeList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductTierPriceEntity[] catalogProductAttributeTierPriceInfo(string sessionId, string product, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeTierPriceInfo", new object[] {
                        sessionId,
                        product,
                        identifierType});
            return ((catalogProductTierPriceEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeTierPriceInfo(string sessionId, string product, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeTierPriceInfo", new object[] {
                        sessionId,
                        product,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductTierPriceEntity[] EndcatalogProductAttributeTierPriceInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductTierPriceEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogProductAttributeTierPriceUpdate(string sessionId, string product, catalogProductTierPriceEntity[] tier_price, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeTierPriceUpdate", new object[] {
                        sessionId,
                        product,
                        tier_price,
                        identifierType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeTierPriceUpdate(string sessionId, string product, catalogProductTierPriceEntity[] tier_price, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeTierPriceUpdate", new object[] {
                        sessionId,
                        product,
                        tier_price,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeTierPriceUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("storeView")]
        public int catalogProductAttributeMediaCurrentStore(string sessionId, string storeView) {
            object[] results = this.Invoke("catalogProductAttributeMediaCurrentStore", new object[] {
                        sessionId,
                        storeView});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaCurrentStore(string sessionId, string storeView, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaCurrentStore", new object[] {
                        sessionId,
                        storeView}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductAttributeMediaCurrentStore(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductImageEntity[] catalogProductAttributeMediaList(string sessionId, string product, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeMediaList", new object[] {
                        sessionId,
                        product,
                        storeView,
                        identifierType});
            return ((catalogProductImageEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaList(string sessionId, string product, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaList", new object[] {
                        sessionId,
                        product,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductImageEntity[] EndcatalogProductAttributeMediaList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductImageEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductImageEntity catalogProductAttributeMediaInfo(string sessionId, string product, string file, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeMediaInfo", new object[] {
                        sessionId,
                        product,
                        file,
                        storeView,
                        identifierType});
            return ((catalogProductImageEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaInfo(string sessionId, string product, string file, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaInfo", new object[] {
                        sessionId,
                        product,
                        file,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductImageEntity EndcatalogProductAttributeMediaInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductImageEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductAttributeMediaTypeEntity[] catalogProductAttributeMediaTypes(string sessionId, string setId) {
            object[] results = this.Invoke("catalogProductAttributeMediaTypes", new object[] {
                        sessionId,
                        setId});
            return ((catalogProductAttributeMediaTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaTypes(string sessionId, string setId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaTypes", new object[] {
                        sessionId,
                        setId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductAttributeMediaTypeEntity[] EndcatalogProductAttributeMediaTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductAttributeMediaTypeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string catalogProductAttributeMediaCreate(string sessionId, string product, catalogProductAttributeMediaCreateEntity data, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeMediaCreate", new object[] {
                        sessionId,
                        product,
                        data,
                        storeView,
                        identifierType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaCreate(string sessionId, string product, catalogProductAttributeMediaCreateEntity data, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaCreate", new object[] {
                        sessionId,
                        product,
                        data,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndcatalogProductAttributeMediaCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeMediaUpdate(string sessionId, string product, string file, catalogProductAttributeMediaCreateEntity data, string storeView, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeMediaUpdate", new object[] {
                        sessionId,
                        product,
                        file,
                        data,
                        storeView,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaUpdate(string sessionId, string product, string file, catalogProductAttributeMediaCreateEntity data, string storeView, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaUpdate", new object[] {
                        sessionId,
                        product,
                        file,
                        data,
                        storeView,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeMediaUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductAttributeMediaRemove(string sessionId, string product, string file, string identifierType) {
            object[] results = this.Invoke("catalogProductAttributeMediaRemove", new object[] {
                        sessionId,
                        product,
                        file,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductAttributeMediaRemove(string sessionId, string product, string file, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductAttributeMediaRemove", new object[] {
                        sessionId,
                        product,
                        file,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductAttributeMediaRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductLinkEntity[] catalogProductLinkList(string sessionId, string type, string product, string identifierType) {
            object[] results = this.Invoke("catalogProductLinkList", new object[] {
                        sessionId,
                        type,
                        product,
                        identifierType});
            return ((catalogProductLinkEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkList(string sessionId, string type, string product, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductLinkList", new object[] {
                        sessionId,
                        type,
                        product,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductLinkEntity[] EndcatalogProductLinkList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductLinkEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductLinkAssign(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data, string identifierType) {
            object[] results = this.Invoke("catalogProductLinkAssign", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkAssign(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductLinkAssign", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductLinkAssign(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductLinkUpdate(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data, string identifierType) {
            object[] results = this.Invoke("catalogProductLinkUpdate", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkUpdate(string sessionId, string type, string product, string linkedProduct, catalogProductLinkEntity data, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductLinkUpdate", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        data,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductLinkUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductLinkRemove(string sessionId, string type, string product, string linkedProduct, string identifierType) {
            object[] results = this.Invoke("catalogProductLinkRemove", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        identifierType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkRemove(string sessionId, string type, string product, string linkedProduct, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductLinkRemove", new object[] {
                        sessionId,
                        type,
                        product,
                        linkedProduct,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductLinkRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string[] catalogProductLinkTypes(string sessionId) {
            object[] results = this.Invoke("catalogProductLinkTypes", new object[] {
                        sessionId});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkTypes(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductLinkTypes", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndcatalogProductLinkTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductLinkAttributeEntity[] catalogProductLinkAttributes(string sessionId, string type) {
            object[] results = this.Invoke("catalogProductLinkAttributes", new object[] {
                        sessionId,
                        type});
            return ((catalogProductLinkAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductLinkAttributes(string sessionId, string type, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductLinkAttributes", new object[] {
                        sessionId,
                        type}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductLinkAttributeEntity[] EndcatalogProductLinkAttributes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductLinkAttributeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductCustomOptionAdd(string sessionId, string productId, catalogProductCustomOptionToAdd data, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionAdd", new object[] {
                        sessionId,
                        productId,
                        data,
                        store});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionAdd(string sessionId, string productId, catalogProductCustomOptionToAdd data, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionAdd", new object[] {
                        sessionId,
                        productId,
                        data,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductCustomOptionAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductCustomOptionUpdate(string sessionId, string optionId, catalogProductCustomOptionToUpdate data, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionUpdate", new object[] {
                        sessionId,
                        optionId,
                        data,
                        store});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionUpdate(string sessionId, string optionId, catalogProductCustomOptionToUpdate data, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionUpdate", new object[] {
                        sessionId,
                        optionId,
                        data,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductCustomOptionUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductCustomOptionTypesEntity[] catalogProductCustomOptionTypes(string sessionId) {
            object[] results = this.Invoke("catalogProductCustomOptionTypes", new object[] {
                        sessionId});
            return ((catalogProductCustomOptionTypesEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionTypes(string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionTypes", new object[] {
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductCustomOptionTypesEntity[] EndcatalogProductCustomOptionTypes(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductCustomOptionTypesEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductCustomOptionInfoEntity catalogProductCustomOptionInfo(string sessionId, string optionId, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionInfo", new object[] {
                        sessionId,
                        optionId,
                        store});
            return ((catalogProductCustomOptionInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionInfo(string sessionId, string optionId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionInfo", new object[] {
                        sessionId,
                        optionId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductCustomOptionInfoEntity EndcatalogProductCustomOptionInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductCustomOptionInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductCustomOptionListEntity[] catalogProductCustomOptionList(string sessionId, string productId, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionList", new object[] {
                        sessionId,
                        productId,
                        store});
            return ((catalogProductCustomOptionListEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionList(string sessionId, string productId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionList", new object[] {
                        sessionId,
                        productId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductCustomOptionListEntity[] EndcatalogProductCustomOptionList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductCustomOptionListEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductCustomOptionRemove(string sessionId, string optionId) {
            object[] results = this.Invoke("catalogProductCustomOptionRemove", new object[] {
                        sessionId,
                        optionId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionRemove(string sessionId, string optionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionRemove", new object[] {
                        sessionId,
                        optionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductCustomOptionRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductCustomOptionValueInfoEntity catalogProductCustomOptionValueInfo(string sessionId, string valueId, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionValueInfo", new object[] {
                        sessionId,
                        valueId,
                        store});
            return ((catalogProductCustomOptionValueInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionValueInfo(string sessionId, string valueId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionValueInfo", new object[] {
                        sessionId,
                        valueId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductCustomOptionValueInfoEntity EndcatalogProductCustomOptionValueInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductCustomOptionValueInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductCustomOptionValueListEntity[] catalogProductCustomOptionValueList(string sessionId, string optionId, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionValueList", new object[] {
                        sessionId,
                        optionId,
                        store});
            return ((catalogProductCustomOptionValueListEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionValueList(string sessionId, string optionId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionValueList", new object[] {
                        sessionId,
                        optionId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductCustomOptionValueListEntity[] EndcatalogProductCustomOptionValueList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductCustomOptionValueListEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductCustomOptionValueAdd(string sessionId, string optionId, catalogProductCustomOptionValueAddEntity[] data, string store) {
            object[] results = this.Invoke("catalogProductCustomOptionValueAdd", new object[] {
                        sessionId,
                        optionId,
                        data,
                        store});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionValueAdd(string sessionId, string optionId, catalogProductCustomOptionValueAddEntity[] data, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionValueAdd", new object[] {
                        sessionId,
                        optionId,
                        data,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductCustomOptionValueAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductCustomOptionValueUpdate(string sessionId, string valueId, catalogProductCustomOptionValueUpdateEntity data, string storeId) {
            object[] results = this.Invoke("catalogProductCustomOptionValueUpdate", new object[] {
                        sessionId,
                        valueId,
                        data,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionValueUpdate(string sessionId, string valueId, catalogProductCustomOptionValueUpdateEntity data, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionValueUpdate", new object[] {
                        sessionId,
                        valueId,
                        data,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductCustomOptionValueUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductCustomOptionValueRemove(string sessionId, string valueId) {
            object[] results = this.Invoke("catalogProductCustomOptionValueRemove", new object[] {
                        sessionId,
                        valueId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductCustomOptionValueRemove(string sessionId, string valueId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductCustomOptionValueRemove", new object[] {
                        sessionId,
                        valueId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductCustomOptionValueRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderListEntity[] salesOrderList(string sessionId, filters filters) {
            object[] results = this.Invoke("salesOrderList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderListEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderListEntity[] EndsalesOrderList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderListEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderEntity salesOrderInfo(string sessionId, string orderIncrementId) {
            object[] results = this.Invoke("salesOrderInfo", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((salesOrderEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInfo(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInfo", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderEntity EndsalesOrderInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderAddComment(string sessionId, string orderIncrementId, string status, string comment, string notify) {
            object[] results = this.Invoke("salesOrderAddComment", new object[] {
                        sessionId,
                        orderIncrementId,
                        status,
                        comment,
                        notify});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderAddComment(string sessionId, string orderIncrementId, string status, string comment, string notify, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderAddComment", new object[] {
                        sessionId,
                        orderIncrementId,
                        status,
                        comment,
                        notify}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderAddComment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderHold(string sessionId, string orderIncrementId) {
            object[] results = this.Invoke("salesOrderHold", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderHold(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderHold", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderHold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderUnhold(string sessionId, string orderIncrementId) {
            object[] results = this.Invoke("salesOrderUnhold", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderUnhold(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderUnhold", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderUnhold(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderCancel(string sessionId, string orderIncrementId) {
            object[] results = this.Invoke("salesOrderCancel", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCancel(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderCancel", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderShipmentEntity[] salesOrderShipmentList(string sessionId, filters filters) {
            object[] results = this.Invoke("salesOrderShipmentList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderShipmentEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderShipmentEntity[] EndsalesOrderShipmentList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderShipmentEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderShipmentEntity salesOrderShipmentInfo(string sessionId, string shipmentIncrementId) {
            object[] results = this.Invoke("salesOrderShipmentInfo", new object[] {
                        sessionId,
                        shipmentIncrementId});
            return ((salesOrderShipmentEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentInfo(string sessionId, string shipmentIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentInfo", new object[] {
                        sessionId,
                        shipmentIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderShipmentEntity EndsalesOrderShipmentInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderShipmentEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipmentIncrementId")]
        public string salesOrderShipmentCreate(string sessionId, string orderIncrementId, orderItemIdQty[] itemsQty, string comment, int email, int includeComment) {
            object[] results = this.Invoke("salesOrderShipmentCreate", new object[] {
                        sessionId,
                        orderIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentCreate(string sessionId, string orderIncrementId, orderItemIdQty[] itemsQty, string comment, int email, int includeComment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentCreate", new object[] {
                        sessionId,
                        orderIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderShipmentCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("shipmentIncrementId")]
        public bool salesOrderShipmentAddComment(string sessionId, string shipmentIncrementId, string comment, string email, string includeInEmail) {
            object[] results = this.Invoke("salesOrderShipmentAddComment", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        comment,
                        email,
                        includeInEmail});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentAddComment(string sessionId, string shipmentIncrementId, string comment, string email, string includeInEmail, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentAddComment", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        comment,
                        email,
                        includeInEmail}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderShipmentAddComment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int salesOrderShipmentAddTrack(string sessionId, string shipmentIncrementId, string carrier, string title, string trackNumber) {
            object[] results = this.Invoke("salesOrderShipmentAddTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        carrier,
                        title,
                        trackNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentAddTrack(string sessionId, string shipmentIncrementId, string carrier, string title, string trackNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentAddTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        carrier,
                        title,
                        trackNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndsalesOrderShipmentAddTrack(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderShipmentSendInfo(string sessionId, string shipmentIncrementId, string comment) {
            object[] results = this.Invoke("salesOrderShipmentSendInfo", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        comment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentSendInfo(string sessionId, string shipmentIncrementId, string comment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentSendInfo", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        comment}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderShipmentSendInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderShipmentRemoveTrack(string sessionId, string shipmentIncrementId, string trackId) {
            object[] results = this.Invoke("salesOrderShipmentRemoveTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        trackId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentRemoveTrack(string sessionId, string shipmentIncrementId, string trackId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentRemoveTrack", new object[] {
                        sessionId,
                        shipmentIncrementId,
                        trackId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderShipmentRemoveTrack(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public associativeEntity[] salesOrderShipmentGetCarriers(string sessionId, string orderIncrementId) {
            object[] results = this.Invoke("salesOrderShipmentGetCarriers", new object[] {
                        sessionId,
                        orderIncrementId});
            return ((associativeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderShipmentGetCarriers(string sessionId, string orderIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderShipmentGetCarriers", new object[] {
                        sessionId,
                        orderIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public associativeEntity[] EndsalesOrderShipmentGetCarriers(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((associativeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderInvoiceEntity[] salesOrderInvoiceList(string sessionId, filters filters) {
            object[] results = this.Invoke("salesOrderInvoiceList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderInvoiceEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderInvoiceEntity[] EndsalesOrderInvoiceList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderInvoiceEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderInvoiceEntity salesOrderInvoiceInfo(string sessionId, string invoiceIncrementId) {
            object[] results = this.Invoke("salesOrderInvoiceInfo", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((salesOrderInvoiceEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceInfo(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceInfo", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderInvoiceEntity EndsalesOrderInvoiceInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderInvoiceEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderInvoiceCreate(string sessionId, string invoiceIncrementId, orderItemIdQty[] itemsQty, string comment, string email, string includeComment) {
            object[] results = this.Invoke("salesOrderInvoiceCreate", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceCreate(string sessionId, string invoiceIncrementId, orderItemIdQty[] itemsQty, string comment, string email, string includeComment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceCreate", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        itemsQty,
                        comment,
                        email,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderInvoiceCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderInvoiceAddComment(string sessionId, string invoiceIncrementId, string comment, string email, string includeComment) {
            object[] results = this.Invoke("salesOrderInvoiceAddComment", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        comment,
                        email,
                        includeComment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceAddComment(string sessionId, string invoiceIncrementId, string comment, string email, string includeComment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceAddComment", new object[] {
                        sessionId,
                        invoiceIncrementId,
                        comment,
                        email,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderInvoiceAddComment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderInvoiceCapture(string sessionId, string invoiceIncrementId) {
            object[] results = this.Invoke("salesOrderInvoiceCapture", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceCapture(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceCapture", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderInvoiceCapture(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderInvoiceVoid(string sessionId, string invoiceIncrementId) {
            object[] results = this.Invoke("salesOrderInvoiceVoid", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceVoid(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceVoid", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderInvoiceVoid(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderInvoiceCancel(string sessionId, string invoiceIncrementId) {
            object[] results = this.Invoke("salesOrderInvoiceCancel", new object[] {
                        sessionId,
                        invoiceIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderInvoiceCancel(string sessionId, string invoiceIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderInvoiceCancel", new object[] {
                        sessionId,
                        invoiceIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderInvoiceCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderCreditmemoEntity[] salesOrderCreditmemoList(string sessionId, filters filters) {
            object[] results = this.Invoke("salesOrderCreditmemoList", new object[] {
                        sessionId,
                        filters});
            return ((salesOrderCreditmemoEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCreditmemoList(string sessionId, filters filters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderCreditmemoList", new object[] {
                        sessionId,
                        filters}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderCreditmemoEntity[] EndsalesOrderCreditmemoList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderCreditmemoEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public salesOrderCreditmemoEntity salesOrderCreditmemoInfo(string sessionId, string creditmemoIncrementId) {
            object[] results = this.Invoke("salesOrderCreditmemoInfo", new object[] {
                        sessionId,
                        creditmemoIncrementId});
            return ((salesOrderCreditmemoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCreditmemoInfo(string sessionId, string creditmemoIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderCreditmemoInfo", new object[] {
                        sessionId,
                        creditmemoIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public salesOrderCreditmemoEntity EndsalesOrderCreditmemoInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((salesOrderCreditmemoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string salesOrderCreditmemoCreate(string sessionId, string orderIncrementId, salesOrderCreditmemoData creditmemoData, string comment, int notifyCustomer, int includeComment, string refundToStoreCreditAmount) {
            object[] results = this.Invoke("salesOrderCreditmemoCreate", new object[] {
                        sessionId,
                        orderIncrementId,
                        creditmemoData,
                        comment,
                        notifyCustomer,
                        includeComment,
                        refundToStoreCreditAmount});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCreditmemoCreate(string sessionId, string orderIncrementId, salesOrderCreditmemoData creditmemoData, string comment, int notifyCustomer, int includeComment, string refundToStoreCreditAmount, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderCreditmemoCreate", new object[] {
                        sessionId,
                        orderIncrementId,
                        creditmemoData,
                        comment,
                        notifyCustomer,
                        includeComment,
                        refundToStoreCreditAmount}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndsalesOrderCreditmemoCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderCreditmemoAddComment(string sessionId, string creditmemoIncrementId, string comment, int notifyCustomer, int includeComment) {
            object[] results = this.Invoke("salesOrderCreditmemoAddComment", new object[] {
                        sessionId,
                        creditmemoIncrementId,
                        comment,
                        notifyCustomer,
                        includeComment});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCreditmemoAddComment(string sessionId, string creditmemoIncrementId, string comment, int notifyCustomer, int includeComment, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderCreditmemoAddComment", new object[] {
                        sessionId,
                        creditmemoIncrementId,
                        comment,
                        notifyCustomer,
                        includeComment}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderCreditmemoAddComment(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool salesOrderCreditmemoCancel(string sessionId, string creditmemoIncrementId) {
            object[] results = this.Invoke("salesOrderCreditmemoCancel", new object[] {
                        sessionId,
                        creditmemoIncrementId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginsalesOrderCreditmemoCancel(string sessionId, string creditmemoIncrementId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("salesOrderCreditmemoCancel", new object[] {
                        sessionId,
                        creditmemoIncrementId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndsalesOrderCreditmemoCancel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogInventoryStockItemEntity[] catalogInventoryStockItemList(string sessionId, string[] products) {
            object[] results = this.Invoke("catalogInventoryStockItemList", new object[] {
                        sessionId,
                        products});
            return ((catalogInventoryStockItemEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogInventoryStockItemList(string sessionId, string[] products, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogInventoryStockItemList", new object[] {
                        sessionId,
                        products}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogInventoryStockItemEntity[] EndcatalogInventoryStockItemList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogInventoryStockItemEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public int catalogInventoryStockItemUpdate(string sessionId, string product, catalogInventoryStockItemUpdateEntity data) {
            object[] results = this.Invoke("catalogInventoryStockItemUpdate", new object[] {
                        sessionId,
                        product,
                        data});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogInventoryStockItemUpdate(string sessionId, string product, catalogInventoryStockItemUpdateEntity data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogInventoryStockItemUpdate", new object[] {
                        sessionId,
                        product,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogInventoryStockItemUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogInventoryStockItemMultiUpdate(string sessionId, string[] productIds, catalogInventoryStockItemUpdateEntity[] productData) {
            object[] results = this.Invoke("catalogInventoryStockItemMultiUpdate", new object[] {
                        sessionId,
                        productIds,
                        productData});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogInventoryStockItemMultiUpdate(string sessionId, string[] productIds, catalogInventoryStockItemUpdateEntity[] productData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogInventoryStockItemMultiUpdate", new object[] {
                        sessionId,
                        productIds,
                        productData}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogInventoryStockItemMultiUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("quoteId")]
        public int shoppingCartCreate(string sessionId, string storeId) {
            object[] results = this.Invoke("shoppingCartCreate", new object[] {
                        sessionId,
                        storeId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartCreate(string sessionId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartCreate", new object[] {
                        sessionId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndshoppingCartCreate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public shoppingCartInfoEntity shoppingCartInfo(string sessionId, int quoteId, string storeId) {
            object[] results = this.Invoke("shoppingCartInfo", new object[] {
                        sessionId,
                        quoteId,
                        storeId});
            return ((shoppingCartInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartInfo(string sessionId, int quoteId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartInfo", new object[] {
                        sessionId,
                        quoteId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public shoppingCartInfoEntity EndshoppingCartInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((shoppingCartInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public string shoppingCartOrder(string sessionId, int quoteId, string storeId, string[] licenses) {
            object[] results = this.Invoke("shoppingCartOrder", new object[] {
                        sessionId,
                        quoteId,
                        storeId,
                        licenses});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartOrder(string sessionId, int quoteId, string storeId, string[] licenses, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartOrder", new object[] {
                        sessionId,
                        quoteId,
                        storeId,
                        licenses}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndshoppingCartOrder(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public shoppingCartTotalsEntity[] shoppingCartTotals(string sessionId, int quoteId, string storeId) {
            object[] results = this.Invoke("shoppingCartTotals", new object[] {
                        sessionId,
                        quoteId,
                        storeId});
            return ((shoppingCartTotalsEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartTotals(string sessionId, int quoteId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartTotals", new object[] {
                        sessionId,
                        quoteId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public shoppingCartTotalsEntity[] EndshoppingCartTotals(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((shoppingCartTotalsEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public shoppingCartLicenseEntity[] shoppingCartLicense(string sessionId, int quoteId, string storeId) {
            object[] results = this.Invoke("shoppingCartLicense", new object[] {
                        sessionId,
                        quoteId,
                        storeId});
            return ((shoppingCartLicenseEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartLicense(string sessionId, int quoteId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartLicense", new object[] {
                        sessionId,
                        quoteId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public shoppingCartLicenseEntity[] EndshoppingCartLicense(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((shoppingCartLicenseEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartProductAdd(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId) {
            object[] results = this.Invoke("shoppingCartProductAdd", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartProductAdd(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartProductAdd", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartProductAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartProductUpdate(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId) {
            object[] results = this.Invoke("shoppingCartProductUpdate", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartProductUpdate(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartProductUpdate", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartProductUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartProductRemove(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId) {
            object[] results = this.Invoke("shoppingCartProductRemove", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartProductRemove(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartProductRemove", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartProductRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductEntity[] shoppingCartProductList(string sessionId, int quoteId, string storeId) {
            object[] results = this.Invoke("shoppingCartProductList", new object[] {
                        sessionId,
                        quoteId,
                        storeId});
            return ((catalogProductEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartProductList(string sessionId, int quoteId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartProductList", new object[] {
                        sessionId,
                        quoteId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductEntity[] EndshoppingCartProductList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartProductMoveToCustomerQuote(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId) {
            object[] results = this.Invoke("shoppingCartProductMoveToCustomerQuote", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartProductMoveToCustomerQuote(string sessionId, int quoteId, shoppingCartProductEntity[] products, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartProductMoveToCustomerQuote", new object[] {
                        sessionId,
                        quoteId,
                        products,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartProductMoveToCustomerQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartCustomerSet(string sessionId, int quoteId, shoppingCartCustomerEntity customer, string storeId) {
            object[] results = this.Invoke("shoppingCartCustomerSet", new object[] {
                        sessionId,
                        quoteId,
                        customer,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartCustomerSet(string sessionId, int quoteId, shoppingCartCustomerEntity customer, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartCustomerSet", new object[] {
                        sessionId,
                        quoteId,
                        customer,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartCustomerSet(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartCustomerAddresses(string sessionId, int quoteId, shoppingCartCustomerAddressEntity[] customer, string storeId) {
            object[] results = this.Invoke("shoppingCartCustomerAddresses", new object[] {
                        sessionId,
                        quoteId,
                        customer,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartCustomerAddresses(string sessionId, int quoteId, shoppingCartCustomerAddressEntity[] customer, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartCustomerAddresses", new object[] {
                        sessionId,
                        quoteId,
                        customer,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartCustomerAddresses(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartShippingMethod(string sessionId, int quoteId, string method, string storeId) {
            object[] results = this.Invoke("shoppingCartShippingMethod", new object[] {
                        sessionId,
                        quoteId,
                        method,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartShippingMethod(string sessionId, int quoteId, string method, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartShippingMethod", new object[] {
                        sessionId,
                        quoteId,
                        method,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartShippingMethod(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public shoppingCartShippingMethodEntity[] shoppingCartShippingList(string sessionId, int quoteId, string storeId) {
            object[] results = this.Invoke("shoppingCartShippingList", new object[] {
                        sessionId,
                        quoteId,
                        storeId});
            return ((shoppingCartShippingMethodEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartShippingList(string sessionId, int quoteId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartShippingList", new object[] {
                        sessionId,
                        quoteId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public shoppingCartShippingMethodEntity[] EndshoppingCartShippingList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((shoppingCartShippingMethodEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartPaymentMethod(string sessionId, int quoteId, shoppingCartPaymentMethodEntity method, string storeId) {
            object[] results = this.Invoke("shoppingCartPaymentMethod", new object[] {
                        sessionId,
                        quoteId,
                        method,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartPaymentMethod(string sessionId, int quoteId, shoppingCartPaymentMethodEntity method, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartPaymentMethod", new object[] {
                        sessionId,
                        quoteId,
                        method,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartPaymentMethod(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public shoppingCartPaymentMethodResponseEntity[] shoppingCartPaymentList(string sessionId, int quoteId, string store) {
            object[] results = this.Invoke("shoppingCartPaymentList", new object[] {
                        sessionId,
                        quoteId,
                        store});
            return ((shoppingCartPaymentMethodResponseEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartPaymentList(string sessionId, int quoteId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartPaymentList", new object[] {
                        sessionId,
                        quoteId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public shoppingCartPaymentMethodResponseEntity[] EndshoppingCartPaymentList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((shoppingCartPaymentMethodResponseEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartCouponAdd(string sessionId, int quoteId, string couponCode, string storeId) {
            object[] results = this.Invoke("shoppingCartCouponAdd", new object[] {
                        sessionId,
                        quoteId,
                        couponCode,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartCouponAdd(string sessionId, int quoteId, string couponCode, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartCouponAdd", new object[] {
                        sessionId,
                        quoteId,
                        couponCode,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartCouponAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool shoppingCartCouponRemove(string sessionId, int quoteId, string storeId) {
            object[] results = this.Invoke("shoppingCartCouponRemove", new object[] {
                        sessionId,
                        quoteId,
                        storeId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginshoppingCartCouponRemove(string sessionId, int quoteId, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("shoppingCartCouponRemove", new object[] {
                        sessionId,
                        quoteId,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndshoppingCartCouponRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductTagListEntity[] catalogProductTagList(string sessionId, string productId, string store) {
            object[] results = this.Invoke("catalogProductTagList", new object[] {
                        sessionId,
                        productId,
                        store});
            return ((catalogProductTagListEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTagList(string sessionId, string productId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductTagList", new object[] {
                        sessionId,
                        productId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductTagListEntity[] EndcatalogProductTagList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductTagListEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public catalogProductTagInfoEntity catalogProductTagInfo(string sessionId, string tagId, string store) {
            object[] results = this.Invoke("catalogProductTagInfo", new object[] {
                        sessionId,
                        tagId,
                        store});
            return ((catalogProductTagInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTagInfo(string sessionId, string tagId, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductTagInfo", new object[] {
                        sessionId,
                        tagId,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductTagInfoEntity EndcatalogProductTagInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductTagInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public associativeEntity[] catalogProductTagAdd(string sessionId, catalogProductTagAddEntity data) {
            object[] results = this.Invoke("catalogProductTagAdd", new object[] {
                        sessionId,
                        data});
            return ((associativeEntity[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTagAdd(string sessionId, catalogProductTagAddEntity data, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductTagAdd", new object[] {
                        sessionId,
                        data}, callback, asyncState);
        }
        
        /// <remarks/>
        public associativeEntity[] EndcatalogProductTagAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((associativeEntity[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductTagUpdate(string sessionId, string tagId, catalogProductTagUpdateEntity data, string store) {
            object[] results = this.Invoke("catalogProductTagUpdate", new object[] {
                        sessionId,
                        tagId,
                        data,
                        store});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTagUpdate(string sessionId, string tagId, catalogProductTagUpdateEntity data, string store, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductTagUpdate", new object[] {
                        sessionId,
                        tagId,
                        data,
                        store}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductTagUpdate(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public bool catalogProductTagRemove(string sessionId, string tagId) {
            object[] results = this.Invoke("catalogProductTagRemove", new object[] {
                        sessionId,
                        tagId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductTagRemove(string sessionId, string tagId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductTagRemove", new object[] {
                        sessionId,
                        tagId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductTagRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public giftMessageResponse giftMessageSetForQuote(string sessionId, string quoteId, giftMessageEntity giftMessage, string storeId) {
            object[] results = this.Invoke("giftMessageSetForQuote", new object[] {
                        sessionId,
                        quoteId,
                        giftMessage,
                        storeId});
            return ((giftMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingiftMessageSetForQuote(string sessionId, string quoteId, giftMessageEntity giftMessage, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("giftMessageSetForQuote", new object[] {
                        sessionId,
                        quoteId,
                        giftMessage,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public giftMessageResponse EndgiftMessageSetForQuote(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((giftMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public giftMessageResponse giftMessageSetForQuoteItem(string sessionId, string quoteItemId, giftMessageEntity giftMessage, string storeId) {
            object[] results = this.Invoke("giftMessageSetForQuoteItem", new object[] {
                        sessionId,
                        quoteItemId,
                        giftMessage,
                        storeId});
            return ((giftMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingiftMessageSetForQuoteItem(string sessionId, string quoteItemId, giftMessageEntity giftMessage, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("giftMessageSetForQuoteItem", new object[] {
                        sessionId,
                        quoteItemId,
                        giftMessage,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public giftMessageResponse EndgiftMessageSetForQuoteItem(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((giftMessageResponse)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("result")]
        public giftMessageResponse[] giftMessageSetForQuoteProduct(string sessionId, string quoteId, giftMessageAssociativeProductsEntity[] productsAndMessages, string storeId) {
            object[] results = this.Invoke("giftMessageSetForQuoteProduct", new object[] {
                        sessionId,
                        quoteId,
                        productsAndMessages,
                        storeId});
            return ((giftMessageResponse[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingiftMessageSetForQuoteProduct(string sessionId, string quoteId, giftMessageAssociativeProductsEntity[] productsAndMessages, string storeId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("giftMessageSetForQuoteProduct", new object[] {
                        sessionId,
                        quoteId,
                        productsAndMessages,
                        storeId}, callback, asyncState);
        }
        
        /// <remarks/>
        public giftMessageResponse[] EndgiftMessageSetForQuoteProduct(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((giftMessageResponse[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("respons")]
        public int catalogProductDownloadableLinkAdd(string sessionId, string productId, catalogProductDownloadableLinkAddEntity resource, string resourceType, string store, string identifierType) {
            object[] results = this.Invoke("catalogProductDownloadableLinkAdd", new object[] {
                        sessionId,
                        productId,
                        resource,
                        resourceType,
                        store,
                        identifierType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductDownloadableLinkAdd(string sessionId, string productId, catalogProductDownloadableLinkAddEntity resource, string resourceType, string store, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductDownloadableLinkAdd", new object[] {
                        sessionId,
                        productId,
                        resource,
                        resourceType,
                        store,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndcatalogProductDownloadableLinkAdd(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("respons")]
        public catalogProductDownloadableLinkInfoEntity catalogProductDownloadableLinkList(string sessionId, string productId, string store, string identifierType) {
            object[] results = this.Invoke("catalogProductDownloadableLinkList", new object[] {
                        sessionId,
                        productId,
                        store,
                        identifierType});
            return ((catalogProductDownloadableLinkInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductDownloadableLinkList(string sessionId, string productId, string store, string identifierType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductDownloadableLinkList", new object[] {
                        sessionId,
                        productId,
                        store,
                        identifierType}, callback, asyncState);
        }
        
        /// <remarks/>
        public catalogProductDownloadableLinkInfoEntity EndcatalogProductDownloadableLinkList(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((catalogProductDownloadableLinkInfoEntity)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:Action", RequestNamespace="urn:Magento", ResponseNamespace="urn:Magento")]
        [return: System.Xml.Serialization.SoapElementAttribute("respons")]
        public bool catalogProductDownloadableLinkRemove(string sessionId, string linkId, string resourceType) {
            object[] results = this.Invoke("catalogProductDownloadableLinkRemove", new object[] {
                        sessionId,
                        linkId,
                        resourceType});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegincatalogProductDownloadableLinkRemove(string sessionId, string linkId, string resourceType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("catalogProductDownloadableLinkRemove", new object[] {
                        sessionId,
                        linkId,
                        resourceType}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndcatalogProductDownloadableLinkRemove(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class apiEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string[] aliases;
        
        /// <remarks/>
        public apiMethodEntity[] methods;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class apiMethodEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string path;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string[] aliases;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkSampleEntity {
        
        /// <remarks/>
        public string sample_id;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sample_file;
        
        /// <remarks/>
        public string sample_url;
        
        /// <remarks/>
        public string sample_type;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public string default_title;
        
        /// <remarks/>
        public string store_title;
        
        /// <remarks/>
        public string title;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkFileInfoEntity {
        
        /// <remarks/>
        public string file;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int size;
        
        /// <remarks/>
        public string status;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkEntity {
        
        /// <remarks/>
        public string link_id;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public int number_of_downloads;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool number_of_downloadsSpecified;
        
        /// <remarks/>
        public int is_unlimited;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_unlimitedSpecified;
        
        /// <remarks/>
        public int is_shareable;
        
        /// <remarks/>
        public string link_url;
        
        /// <remarks/>
        public string link_type;
        
        /// <remarks/>
        public string sample_file;
        
        /// <remarks/>
        public string sample_url;
        
        /// <remarks/>
        public string sample_type;
        
        /// <remarks/>
        public int sort_order;
        
        /// <remarks/>
        public catalogProductDownloadableLinkFileInfoEntity[] file_save;
        
        /// <remarks/>
        public catalogProductDownloadableLinkFileInfoEntity[] sample_file_save;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkInfoEntity {
        
        /// <remarks/>
        public catalogProductDownloadableLinkEntity[] links;
        
        /// <remarks/>
        public catalogProductDownloadableLinkSampleEntity[] samples;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkFileEntity {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string base64_content;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkAddSampleEntity {
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public catalogProductDownloadableLinkFileEntity file;
        
        /// <remarks/>
        public string url;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductDownloadableLinkAddEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public int is_unlimited;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_unlimitedSpecified;
        
        /// <remarks/>
        public int number_of_downloads;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool number_of_downloadsSpecified;
        
        /// <remarks/>
        public int is_shareable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_shareableSpecified;
        
        /// <remarks/>
        public catalogProductDownloadableLinkAddSampleEntity sample;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public catalogProductDownloadableLinkFileEntity file;
        
        /// <remarks/>
        public string link_url;
        
        /// <remarks/>
        public string sample_url;
        
        /// <remarks/>
        public int sort_order;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool sort_orderSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class giftMessageAssociativeProductsEntity {
        
        /// <remarks/>
        public shoppingCartProductEntity product;
        
        /// <remarks/>
        public giftMessageEntity message;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartProductEntity {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public double qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool qtySpecified;
        
        /// <remarks/>
        public associativeEntity[] options;
        
        /// <remarks/>
        public associativeEntity[] bundle_option;
        
        /// <remarks/>
        public associativeEntity[] bundle_option_qty;
        
        /// <remarks/>
        public string[] links;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class associativeEntity {
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class giftMessageEntity {
        
        /// <remarks/>
        public string from;
        
        /// <remarks/>
        public string to;
        
        /// <remarks/>
        public string message;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class giftMessageResponse {
        
        /// <remarks/>
        public string entityId;
        
        /// <remarks/>
        public bool result;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool resultSpecified;
        
        /// <remarks/>
        public string error;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTagUpdateEntity {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string base_popularity;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTagAddEntity {
        
        /// <remarks/>
        public string tag;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string customer_id;
        
        /// <remarks/>
        public string store;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTagInfoEntity {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string base_popularity;
        
        /// <remarks/>
        public associativeEntity[] products;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTagListEntity {
        
        /// <remarks/>
        public string tag_id;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartPaymentMethodResponseEntity {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public associativeEntity[] cc_types;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartPaymentMethodEntity {
        
        /// <remarks/>
        public string po_number;
        
        /// <remarks/>
        public string method;
        
        /// <remarks/>
        public string cc_cid;
        
        /// <remarks/>
        public string cc_owner;
        
        /// <remarks/>
        public string cc_number;
        
        /// <remarks/>
        public string cc_type;
        
        /// <remarks/>
        public string cc_exp_year;
        
        /// <remarks/>
        public string cc_exp_month;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartShippingMethodEntity {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string carrier;
        
        /// <remarks/>
        public string carrier_title;
        
        /// <remarks/>
        public string method;
        
        /// <remarks/>
        public string method_title;
        
        /// <remarks/>
        public string method_description;
        
        /// <remarks/>
        public double price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool priceSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartCustomerAddressEntity {
        
        /// <remarks/>
        public string mode;
        
        /// <remarks/>
        public string address_id;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string street;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public string region_id;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public int is_default_billing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_billingSpecified;
        
        /// <remarks/>
        public int is_default_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_shippingSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartCustomerEntity {
        
        /// <remarks/>
        public string mode;
        
        /// <remarks/>
        public int customer_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_idSpecified;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string password;
        
        /// <remarks/>
        public string confirmation;
        
        /// <remarks/>
        public int website_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool website_idSpecified;
        
        /// <remarks/>
        public int store_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool store_idSpecified;
        
        /// <remarks/>
        public int group_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool group_idSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartLicenseEntity {
        
        /// <remarks/>
        public string agreement_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string content;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_activeSpecified;
        
        /// <remarks/>
        public int is_html;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_htmlSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartTotalsEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public double amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool amountSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartPaymentEntity {
        
        /// <remarks/>
        public string payment_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string method;
        
        /// <remarks/>
        public string cc_type;
        
        /// <remarks/>
        public string cc_number_enc;
        
        /// <remarks/>
        public string cc_last4;
        
        /// <remarks/>
        public string cc_cid_enc;
        
        /// <remarks/>
        public string cc_owner;
        
        /// <remarks/>
        public string cc_exp_month;
        
        /// <remarks/>
        public string cc_exp_year;
        
        /// <remarks/>
        public string cc_ss_owner;
        
        /// <remarks/>
        public string cc_ss_start_month;
        
        /// <remarks/>
        public string cc_ss_start_year;
        
        /// <remarks/>
        public string cc_ss_issue;
        
        /// <remarks/>
        public string po_number;
        
        /// <remarks/>
        public string additional_data;
        
        /// <remarks/>
        public string additional_information;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartItemEntity {
        
        /// <remarks/>
        public string item_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string parent_item_id;
        
        /// <remarks/>
        public int is_virtual;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_virtualSpecified;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string additional_data;
        
        /// <remarks/>
        public string free_shipping;
        
        /// <remarks/>
        public string is_qty_decimal;
        
        /// <remarks/>
        public string no_discount;
        
        /// <remarks/>
        public double weight;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weightSpecified;
        
        /// <remarks/>
        public double qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool qtySpecified;
        
        /// <remarks/>
        public double price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool priceSpecified;
        
        /// <remarks/>
        public double base_price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_priceSpecified;
        
        /// <remarks/>
        public double custom_price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool custom_priceSpecified;
        
        /// <remarks/>
        public double discount_percent;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool discount_percentSpecified;
        
        /// <remarks/>
        public double discount_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool discount_amountSpecified;
        
        /// <remarks/>
        public double base_discount_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_discount_amountSpecified;
        
        /// <remarks/>
        public double tax_percent;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool tax_percentSpecified;
        
        /// <remarks/>
        public double tax_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool tax_amountSpecified;
        
        /// <remarks/>
        public double base_tax_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_tax_amountSpecified;
        
        /// <remarks/>
        public double row_total;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool row_totalSpecified;
        
        /// <remarks/>
        public double base_row_total;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_row_totalSpecified;
        
        /// <remarks/>
        public double row_total_with_discount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool row_total_with_discountSpecified;
        
        /// <remarks/>
        public double row_weight;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool row_weightSpecified;
        
        /// <remarks/>
        public string product_type;
        
        /// <remarks/>
        public double base_tax_before_discount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_tax_before_discountSpecified;
        
        /// <remarks/>
        public double tax_before_discount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool tax_before_discountSpecified;
        
        /// <remarks/>
        public double original_custom_price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool original_custom_priceSpecified;
        
        /// <remarks/>
        public double base_cost;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_costSpecified;
        
        /// <remarks/>
        public double price_incl_tax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool price_incl_taxSpecified;
        
        /// <remarks/>
        public double base_price_incl_tax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_price_incl_taxSpecified;
        
        /// <remarks/>
        public double row_total_incl_tax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool row_total_incl_taxSpecified;
        
        /// <remarks/>
        public double base_row_total_incl_tax;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_row_total_incl_taxSpecified;
        
        /// <remarks/>
        public string gift_message_id;
        
        /// <remarks/>
        public string gift_message;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public double weee_tax_applied;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weee_tax_appliedSpecified;
        
        /// <remarks/>
        public double weee_tax_applied_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weee_tax_applied_amountSpecified;
        
        /// <remarks/>
        public double weee_tax_applied_row_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weee_tax_applied_row_amountSpecified;
        
        /// <remarks/>
        public double base_weee_tax_applied_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_weee_tax_applied_amountSpecified;
        
        /// <remarks/>
        public double base_weee_tax_applied_row_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_weee_tax_applied_row_amountSpecified;
        
        /// <remarks/>
        public double weee_tax_disposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weee_tax_dispositionSpecified;
        
        /// <remarks/>
        public double weee_tax_row_disposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weee_tax_row_dispositionSpecified;
        
        /// <remarks/>
        public double base_weee_tax_disposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_weee_tax_dispositionSpecified;
        
        /// <remarks/>
        public double base_weee_tax_row_disposition;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_weee_tax_row_dispositionSpecified;
        
        /// <remarks/>
        public string tax_class_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartAddressEntity {
        
        /// <remarks/>
        public string address_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string customer_id;
        
        /// <remarks/>
        public int save_in_address_book;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool save_in_address_bookSpecified;
        
        /// <remarks/>
        public string customer_address_id;
        
        /// <remarks/>
        public string address_type;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string street;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public string region_id;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public int same_as_billing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool same_as_billingSpecified;
        
        /// <remarks/>
        public int free_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool free_shippingSpecified;
        
        /// <remarks/>
        public string shipping_method;
        
        /// <remarks/>
        public string shipping_description;
        
        /// <remarks/>
        public double weight;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool weightSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class shoppingCartInfoEntity {
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string converted_at;
        
        /// <remarks/>
        public int quote_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool quote_idSpecified;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_activeSpecified;
        
        /// <remarks/>
        public int is_virtual;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_virtualSpecified;
        
        /// <remarks/>
        public int is_multi_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_multi_shippingSpecified;
        
        /// <remarks/>
        public double items_count;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool items_countSpecified;
        
        /// <remarks/>
        public double items_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool items_qtySpecified;
        
        /// <remarks/>
        public string orig_order_id;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string store_to_quote_rate;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string quote_currency_code;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string checkout_method;
        
        /// <remarks/>
        public string customer_id;
        
        /// <remarks/>
        public string customer_tax_class_id;
        
        /// <remarks/>
        public int customer_group_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_group_idSpecified;
        
        /// <remarks/>
        public string customer_email;
        
        /// <remarks/>
        public string customer_prefix;
        
        /// <remarks/>
        public string customer_firstname;
        
        /// <remarks/>
        public string customer_middlename;
        
        /// <remarks/>
        public string customer_lastname;
        
        /// <remarks/>
        public string customer_suffix;
        
        /// <remarks/>
        public string customer_note;
        
        /// <remarks/>
        public string customer_note_notify;
        
        /// <remarks/>
        public string customer_is_guest;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string reserved_order_id;
        
        /// <remarks/>
        public string password_hash;
        
        /// <remarks/>
        public string coupon_code;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public double base_to_global_rate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_to_global_rateSpecified;
        
        /// <remarks/>
        public double base_to_quote_rate;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_to_quote_rateSpecified;
        
        /// <remarks/>
        public string customer_taxvat;
        
        /// <remarks/>
        public string customer_gender;
        
        /// <remarks/>
        public double subtotal;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool subtotalSpecified;
        
        /// <remarks/>
        public double base_subtotal;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_subtotalSpecified;
        
        /// <remarks/>
        public double subtotal_with_discount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool subtotal_with_discountSpecified;
        
        /// <remarks/>
        public double base_subtotal_with_discount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_subtotal_with_discountSpecified;
        
        /// <remarks/>
        public string ext_shipping_info;
        
        /// <remarks/>
        public string gift_message_id;
        
        /// <remarks/>
        public string gift_message;
        
        /// <remarks/>
        public double customer_balance_amount_used;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_balance_amount_usedSpecified;
        
        /// <remarks/>
        public double base_customer_balance_amount_used;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool base_customer_balance_amount_usedSpecified;
        
        /// <remarks/>
        public string use_customer_balance;
        
        /// <remarks/>
        public string gift_cards_amount;
        
        /// <remarks/>
        public string base_gift_cards_amount;
        
        /// <remarks/>
        public string gift_cards_amount_used;
        
        /// <remarks/>
        public string use_reward_points;
        
        /// <remarks/>
        public string reward_points_balance;
        
        /// <remarks/>
        public string base_reward_currency_amount;
        
        /// <remarks/>
        public string reward_currency_amount;
        
        /// <remarks/>
        public shoppingCartAddressEntity shipping_address;
        
        /// <remarks/>
        public shoppingCartAddressEntity billing_address;
        
        /// <remarks/>
        public shoppingCartItemEntity[] items;
        
        /// <remarks/>
        public shoppingCartPaymentEntity payment;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogInventoryStockItemEntity {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string is_in_stock;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderCreditmemoData {
        
        /// <remarks/>
        public orderItemIdQty[] qtys;
        
        /// <remarks/>
        public double shipping_amount;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool shipping_amountSpecified;
        
        /// <remarks/>
        public double adjustment_positive;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool adjustment_positiveSpecified;
        
        /// <remarks/>
        public double adjustment_negative;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool adjustment_negativeSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class orderItemIdQty {
        
        /// <remarks/>
        public int order_item_id;
        
        /// <remarks/>
        public double qty;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderCreditmemoCommentEntity {
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string comment;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string comment_id;
        
        /// <remarks/>
        public string is_visible_on_front;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderCreditmemoItemEntity {
        
        /// <remarks/>
        public string item_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string base_price;
        
        /// <remarks/>
        public string base_weee_tax_row_disposition;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_amount;
        
        /// <remarks/>
        public string weee_tax_row_disposition;
        
        /// <remarks/>
        public string base_row_total;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string row_total;
        
        /// <remarks/>
        public string weee_tax_applied_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string base_weee_tax_disposition;
        
        /// <remarks/>
        public string price_incl_tax;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string weee_tax_disposition;
        
        /// <remarks/>
        public string base_price_incl_tax;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string base_cost;
        
        /// <remarks/>
        public string base_weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string base_row_total_incl_tax;
        
        /// <remarks/>
        public string row_total_incl_tax;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string order_item_id;
        
        /// <remarks/>
        public string additional_data;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string weee_tax_applied;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string hidden_tax_amount;
        
        /// <remarks/>
        public string base_hidden_tax_amount;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderCreditmemoEntity {
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string transaction_id;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string order_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string cybersource_token;
        
        /// <remarks/>
        public string invoice_id;
        
        /// <remarks/>
        public string billing_address_id;
        
        /// <remarks/>
        public string shipping_address_id;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string creditmemo_status;
        
        /// <remarks/>
        public string email_sent;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string shipping_tax_amount;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string base_adjustment_positive;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string adjustment;
        
        /// <remarks/>
        public string subtotal;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string base_subtotal;
        
        /// <remarks/>
        public string base_adjustment;
        
        /// <remarks/>
        public string base_to_global_rate;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string adjustment_negative;
        
        /// <remarks/>
        public string subtotal_incl_tax;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string base_subtotal_incl_tax;
        
        /// <remarks/>
        public string base_adjustment_negative;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string base_to_order_rate;
        
        /// <remarks/>
        public string store_to_order_rate;
        
        /// <remarks/>
        public string base_shipping_tax_amount;
        
        /// <remarks/>
        public string adjustment_positive;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string hidden_tax_amount;
        
        /// <remarks/>
        public string base_hidden_tax_amount;
        
        /// <remarks/>
        public string shipping_hidden_tax_amount;
        
        /// <remarks/>
        public string base_shipping_hidden_tax_amnt;
        
        /// <remarks/>
        public string shipping_incl_tax;
        
        /// <remarks/>
        public string base_shipping_incl_tax;
        
        /// <remarks/>
        public string base_customer_balance_amount;
        
        /// <remarks/>
        public string customer_balance_amount;
        
        /// <remarks/>
        public string bs_customer_bal_total_refunded;
        
        /// <remarks/>
        public string customer_bal_total_refunded;
        
        /// <remarks/>
        public string base_gift_cards_amount;
        
        /// <remarks/>
        public string gift_cards_amount;
        
        /// <remarks/>
        public string gw_base_price;
        
        /// <remarks/>
        public string gw_price;
        
        /// <remarks/>
        public string gw_items_base_price;
        
        /// <remarks/>
        public string gw_items_price;
        
        /// <remarks/>
        public string gw_card_base_price;
        
        /// <remarks/>
        public string gw_card_price;
        
        /// <remarks/>
        public string gw_base_tax_amount;
        
        /// <remarks/>
        public string gw_tax_amount;
        
        /// <remarks/>
        public string gw_items_base_tax_amount;
        
        /// <remarks/>
        public string gw_items_tax_amount;
        
        /// <remarks/>
        public string gw_card_base_tax_amount;
        
        /// <remarks/>
        public string gw_card_tax_amount;
        
        /// <remarks/>
        public string base_reward_currency_amount;
        
        /// <remarks/>
        public string reward_currency_amount;
        
        /// <remarks/>
        public string reward_points_balance;
        
        /// <remarks/>
        public string reward_points_balance_refund;
        
        /// <remarks/>
        public string creditmemo_id;
        
        /// <remarks/>
        public salesOrderCreditmemoItemEntity[] items;
        
        /// <remarks/>
        public salesOrderCreditmemoCommentEntity[] comments;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderInvoiceCommentEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string comment;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string comment_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderInvoiceItemEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string weee_tax_applied;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string cost;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string row_total;
        
        /// <remarks/>
        public string base_price;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string base_row_total;
        
        /// <remarks/>
        public string base_weee_tax_applied_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string weee_tax_applied_amount;
        
        /// <remarks/>
        public string weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string weee_tax_disposition;
        
        /// <remarks/>
        public string weee_tax_row_disposition;
        
        /// <remarks/>
        public string base_weee_tax_disposition;
        
        /// <remarks/>
        public string base_weee_tax_row_disposition;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string order_item_id;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string item_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderInvoiceEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string order_currency_code;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string store_to_order_rate;
        
        /// <remarks/>
        public string base_to_global_rate;
        
        /// <remarks/>
        public string base_to_order_rate;
        
        /// <remarks/>
        public string subtotal;
        
        /// <remarks/>
        public string base_subtotal;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string billing_address_id;
        
        /// <remarks/>
        public string billing_firstname;
        
        /// <remarks/>
        public string billing_lastname;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string order_increment_id;
        
        /// <remarks/>
        public string order_created_at;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string invoice_id;
        
        /// <remarks/>
        public salesOrderInvoiceItemEntity[] items;
        
        /// <remarks/>
        public salesOrderInvoiceCommentEntity[] comments;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentCommentEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string comment;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string comment_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentTrackEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string carrier_code;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string number;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string track_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentItemEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string order_item_id;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public string item_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderShipmentEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string shipping_address_id;
        
        /// <remarks/>
        public string shipping_firstname;
        
        /// <remarks/>
        public string shipping_lastname;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string order_increment_id;
        
        /// <remarks/>
        public string order_created_at;
        
        /// <remarks/>
        public string total_qty;
        
        /// <remarks/>
        public string shipment_id;
        
        /// <remarks/>
        public salesOrderShipmentItemEntity[] items;
        
        /// <remarks/>
        public salesOrderShipmentTrackEntity[] tracks;
        
        /// <remarks/>
        public salesOrderShipmentCommentEntity[] comments;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderStatusHistoryEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string is_customer_notified;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string comment;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderPaymentEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string amount_ordered;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string base_amount_ordered;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string method;
        
        /// <remarks/>
        public string po_number;
        
        /// <remarks/>
        public string cc_type;
        
        /// <remarks/>
        public string cc_number_enc;
        
        /// <remarks/>
        public string cc_last4;
        
        /// <remarks/>
        public string cc_owner;
        
        /// <remarks/>
        public string cc_exp_month;
        
        /// <remarks/>
        public string cc_exp_year;
        
        /// <remarks/>
        public string cc_ss_start_month;
        
        /// <remarks/>
        public string cc_ss_start_year;
        
        /// <remarks/>
        public string payment_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderItemEntity {
        
        /// <remarks/>
        public string item_id;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string quote_item_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string product_type;
        
        /// <remarks/>
        public string product_options;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string is_virtual;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string free_shipping;
        
        /// <remarks/>
        public string is_qty_decimal;
        
        /// <remarks/>
        public string no_discount;
        
        /// <remarks/>
        public string qty_canceled;
        
        /// <remarks/>
        public string qty_invoiced;
        
        /// <remarks/>
        public string qty_ordered;
        
        /// <remarks/>
        public string qty_refunded;
        
        /// <remarks/>
        public string qty_shipped;
        
        /// <remarks/>
        public string cost;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string base_price;
        
        /// <remarks/>
        public string original_price;
        
        /// <remarks/>
        public string base_original_price;
        
        /// <remarks/>
        public string tax_percent;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string tax_invoiced;
        
        /// <remarks/>
        public string base_tax_invoiced;
        
        /// <remarks/>
        public string discount_percent;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string discount_invoiced;
        
        /// <remarks/>
        public string base_discount_invoiced;
        
        /// <remarks/>
        public string amount_refunded;
        
        /// <remarks/>
        public string base_amount_refunded;
        
        /// <remarks/>
        public string row_total;
        
        /// <remarks/>
        public string base_row_total;
        
        /// <remarks/>
        public string row_invoiced;
        
        /// <remarks/>
        public string base_row_invoiced;
        
        /// <remarks/>
        public string row_weight;
        
        /// <remarks/>
        public string gift_message_id;
        
        /// <remarks/>
        public string gift_message;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public string base_tax_before_discount;
        
        /// <remarks/>
        public string tax_before_discount;
        
        /// <remarks/>
        public string weee_tax_applied;
        
        /// <remarks/>
        public string weee_tax_applied_amount;
        
        /// <remarks/>
        public string weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_amount;
        
        /// <remarks/>
        public string base_weee_tax_applied_row_amount;
        
        /// <remarks/>
        public string weee_tax_disposition;
        
        /// <remarks/>
        public string weee_tax_row_disposition;
        
        /// <remarks/>
        public string base_weee_tax_disposition;
        
        /// <remarks/>
        public string base_weee_tax_row_disposition;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderAddressEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string address_type;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string street;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string region_id;
        
        /// <remarks/>
        public string address_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string is_active;
        
        /// <remarks/>
        public string customer_id;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string subtotal;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string total_paid;
        
        /// <remarks/>
        public string total_refunded;
        
        /// <remarks/>
        public string total_qty_ordered;
        
        /// <remarks/>
        public string total_canceled;
        
        /// <remarks/>
        public string total_invoiced;
        
        /// <remarks/>
        public string total_online_refunded;
        
        /// <remarks/>
        public string total_offline_refunded;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string base_subtotal;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string base_total_paid;
        
        /// <remarks/>
        public string base_total_refunded;
        
        /// <remarks/>
        public string base_total_qty_ordered;
        
        /// <remarks/>
        public string base_total_canceled;
        
        /// <remarks/>
        public string base_total_invoiced;
        
        /// <remarks/>
        public string base_total_online_refunded;
        
        /// <remarks/>
        public string base_total_offline_refunded;
        
        /// <remarks/>
        public string billing_address_id;
        
        /// <remarks/>
        public string billing_firstname;
        
        /// <remarks/>
        public string billing_lastname;
        
        /// <remarks/>
        public string shipping_address_id;
        
        /// <remarks/>
        public string shipping_firstname;
        
        /// <remarks/>
        public string shipping_lastname;
        
        /// <remarks/>
        public string billing_name;
        
        /// <remarks/>
        public string shipping_name;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string store_to_order_rate;
        
        /// <remarks/>
        public string base_to_global_rate;
        
        /// <remarks/>
        public string base_to_order_rate;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string store_name;
        
        /// <remarks/>
        public string remote_ip;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string order_currency_code;
        
        /// <remarks/>
        public string shipping_method;
        
        /// <remarks/>
        public string shipping_description;
        
        /// <remarks/>
        public string customer_email;
        
        /// <remarks/>
        public string customer_firstname;
        
        /// <remarks/>
        public string customer_lastname;
        
        /// <remarks/>
        public string quote_id;
        
        /// <remarks/>
        public string is_virtual;
        
        /// <remarks/>
        public string customer_group_id;
        
        /// <remarks/>
        public string customer_note_notify;
        
        /// <remarks/>
        public string customer_is_guest;
        
        /// <remarks/>
        public string email_sent;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string gift_message_id;
        
        /// <remarks/>
        public string gift_message;
        
        /// <remarks/>
        public salesOrderAddressEntity shipping_address;
        
        /// <remarks/>
        public salesOrderAddressEntity billing_address;
        
        /// <remarks/>
        public salesOrderItemEntity[] items;
        
        /// <remarks/>
        public salesOrderPaymentEntity payment;
        
        /// <remarks/>
        public salesOrderStatusHistoryEntity[] status_history;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class salesOrderListEntity {
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string customer_id;
        
        /// <remarks/>
        public string tax_amount;
        
        /// <remarks/>
        public string shipping_amount;
        
        /// <remarks/>
        public string discount_amount;
        
        /// <remarks/>
        public string subtotal;
        
        /// <remarks/>
        public string grand_total;
        
        /// <remarks/>
        public string total_paid;
        
        /// <remarks/>
        public string total_refunded;
        
        /// <remarks/>
        public string total_qty_ordered;
        
        /// <remarks/>
        public string total_canceled;
        
        /// <remarks/>
        public string total_invoiced;
        
        /// <remarks/>
        public string total_online_refunded;
        
        /// <remarks/>
        public string total_offline_refunded;
        
        /// <remarks/>
        public string base_tax_amount;
        
        /// <remarks/>
        public string base_shipping_amount;
        
        /// <remarks/>
        public string base_discount_amount;
        
        /// <remarks/>
        public string base_subtotal;
        
        /// <remarks/>
        public string base_grand_total;
        
        /// <remarks/>
        public string base_total_paid;
        
        /// <remarks/>
        public string base_total_refunded;
        
        /// <remarks/>
        public string base_total_qty_ordered;
        
        /// <remarks/>
        public string base_total_canceled;
        
        /// <remarks/>
        public string base_total_invoiced;
        
        /// <remarks/>
        public string base_total_online_refunded;
        
        /// <remarks/>
        public string base_total_offline_refunded;
        
        /// <remarks/>
        public string billing_address_id;
        
        /// <remarks/>
        public string billing_firstname;
        
        /// <remarks/>
        public string billing_lastname;
        
        /// <remarks/>
        public string shipping_address_id;
        
        /// <remarks/>
        public string shipping_firstname;
        
        /// <remarks/>
        public string shipping_lastname;
        
        /// <remarks/>
        public string billing_name;
        
        /// <remarks/>
        public string shipping_name;
        
        /// <remarks/>
        public string store_to_base_rate;
        
        /// <remarks/>
        public string store_to_order_rate;
        
        /// <remarks/>
        public string base_to_global_rate;
        
        /// <remarks/>
        public string base_to_order_rate;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string store_name;
        
        /// <remarks/>
        public string remote_ip;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string state;
        
        /// <remarks/>
        public string applied_rule_ids;
        
        /// <remarks/>
        public string global_currency_code;
        
        /// <remarks/>
        public string base_currency_code;
        
        /// <remarks/>
        public string store_currency_code;
        
        /// <remarks/>
        public string order_currency_code;
        
        /// <remarks/>
        public string shipping_method;
        
        /// <remarks/>
        public string shipping_description;
        
        /// <remarks/>
        public string customer_email;
        
        /// <remarks/>
        public string customer_firstname;
        
        /// <remarks/>
        public string customer_lastname;
        
        /// <remarks/>
        public string quote_id;
        
        /// <remarks/>
        public string is_virtual;
        
        /// <remarks/>
        public string customer_group_id;
        
        /// <remarks/>
        public string customer_note_notify;
        
        /// <remarks/>
        public string customer_is_guest;
        
        /// <remarks/>
        public string email_sent;
        
        /// <remarks/>
        public string order_id;
        
        /// <remarks/>
        public string gift_message_id;
        
        /// <remarks/>
        public string coupon_code;
        
        /// <remarks/>
        public string protect_code;
        
        /// <remarks/>
        public string base_discount_canceled;
        
        /// <remarks/>
        public string base_discount_invoiced;
        
        /// <remarks/>
        public string base_discount_refunded;
        
        /// <remarks/>
        public string base_shipping_canceled;
        
        /// <remarks/>
        public string base_shipping_invoiced;
        
        /// <remarks/>
        public string base_shipping_refunded;
        
        /// <remarks/>
        public string base_shipping_tax_amount;
        
        /// <remarks/>
        public string base_shipping_tax_refunded;
        
        /// <remarks/>
        public string base_subtotal_canceled;
        
        /// <remarks/>
        public string base_subtotal_invoiced;
        
        /// <remarks/>
        public string base_subtotal_refunded;
        
        /// <remarks/>
        public string base_tax_canceled;
        
        /// <remarks/>
        public string base_tax_invoiced;
        
        /// <remarks/>
        public string base_tax_refunded;
        
        /// <remarks/>
        public string base_total_invoiced_cost;
        
        /// <remarks/>
        public string discount_canceled;
        
        /// <remarks/>
        public string discount_invoiced;
        
        /// <remarks/>
        public string discount_refunded;
        
        /// <remarks/>
        public string shipping_canceled;
        
        /// <remarks/>
        public string shipping_invoiced;
        
        /// <remarks/>
        public string shipping_refunded;
        
        /// <remarks/>
        public string shipping_tax_amount;
        
        /// <remarks/>
        public string shipping_tax_refunded;
        
        /// <remarks/>
        public string subtotal_canceled;
        
        /// <remarks/>
        public string subtotal_invoiced;
        
        /// <remarks/>
        public string subtotal_refunded;
        
        /// <remarks/>
        public string tax_canceled;
        
        /// <remarks/>
        public string tax_invoiced;
        
        /// <remarks/>
        public string tax_refunded;
        
        /// <remarks/>
        public string can_ship_partially;
        
        /// <remarks/>
        public string can_ship_partially_item;
        
        /// <remarks/>
        public string edit_increment;
        
        /// <remarks/>
        public string forced_do_shipment_with_invoice;
        
        /// <remarks/>
        public string payment_authorization_expiration;
        
        /// <remarks/>
        public string paypal_ipn_customer_notified;
        
        /// <remarks/>
        public string quote_address_id;
        
        /// <remarks/>
        public string adjustment_negative;
        
        /// <remarks/>
        public string adjustment_positive;
        
        /// <remarks/>
        public string base_adjustment_negative;
        
        /// <remarks/>
        public string base_adjustment_positive;
        
        /// <remarks/>
        public string base_shipping_discount_amount;
        
        /// <remarks/>
        public string base_subtotal_incl_tax;
        
        /// <remarks/>
        public string base_total_due;
        
        /// <remarks/>
        public string payment_authorization_amount;
        
        /// <remarks/>
        public string shipping_discount_amount;
        
        /// <remarks/>
        public string subtotal_incl_tax;
        
        /// <remarks/>
        public string total_due;
        
        /// <remarks/>
        public string customer_dob;
        
        /// <remarks/>
        public string customer_middlename;
        
        /// <remarks/>
        public string customer_prefix;
        
        /// <remarks/>
        public string customer_suffix;
        
        /// <remarks/>
        public string customer_taxvat;
        
        /// <remarks/>
        public string discount_description;
        
        /// <remarks/>
        public string ext_customer_id;
        
        /// <remarks/>
        public string ext_order_id;
        
        /// <remarks/>
        public string hold_before_state;
        
        /// <remarks/>
        public string hold_before_status;
        
        /// <remarks/>
        public string original_increment_id;
        
        /// <remarks/>
        public string relation_child_id;
        
        /// <remarks/>
        public string relation_child_real_id;
        
        /// <remarks/>
        public string relation_parent_id;
        
        /// <remarks/>
        public string relation_parent_real_id;
        
        /// <remarks/>
        public string x_forwarded_for;
        
        /// <remarks/>
        public string customer_note;
        
        /// <remarks/>
        public string total_item_count;
        
        /// <remarks/>
        public string customer_gender;
        
        /// <remarks/>
        public string hidden_tax_amount;
        
        /// <remarks/>
        public string base_hidden_tax_amount;
        
        /// <remarks/>
        public string shipping_hidden_tax_amount;
        
        /// <remarks/>
        public string base_shipping_hidden_tax_amount;
        
        /// <remarks/>
        public string hidden_tax_invoiced;
        
        /// <remarks/>
        public string base_hidden_tax_invoiced;
        
        /// <remarks/>
        public string hidden_tax_refunded;
        
        /// <remarks/>
        public string base_hidden_tax_refunded;
        
        /// <remarks/>
        public string shipping_incl_tax;
        
        /// <remarks/>
        public string base_shipping_incl_tax;
        
        /// <remarks/>
        public string base_customer_balance_amount;
        
        /// <remarks/>
        public string customer_balance_amount;
        
        /// <remarks/>
        public string base_customer_balance_invoiced;
        
        /// <remarks/>
        public string customer_balance_invoiced;
        
        /// <remarks/>
        public string base_customer_balance_refunded;
        
        /// <remarks/>
        public string customer_balance_refunded;
        
        /// <remarks/>
        public string base_customer_balance_total_refunded;
        
        /// <remarks/>
        public string customer_balance_total_refunded;
        
        /// <remarks/>
        public string gift_cards;
        
        /// <remarks/>
        public string base_gift_cards_amount;
        
        /// <remarks/>
        public string gift_cards_amount;
        
        /// <remarks/>
        public string base_gift_cards_invoiced;
        
        /// <remarks/>
        public string gift_cards_invoiced;
        
        /// <remarks/>
        public string base_gift_cards_refunded;
        
        /// <remarks/>
        public string gift_cards_refunded;
        
        /// <remarks/>
        public string reward_points_balance;
        
        /// <remarks/>
        public string base_reward_currency_amount;
        
        /// <remarks/>
        public string reward_currency_amount;
        
        /// <remarks/>
        public string base_reward_currency_amount_invoiced;
        
        /// <remarks/>
        public string reward_currency_amount_invoiced;
        
        /// <remarks/>
        public string base_reward_currency_amount_refunded;
        
        /// <remarks/>
        public string reward_currency_amount_refunded;
        
        /// <remarks/>
        public string reward_points_balance_refunded;
        
        /// <remarks/>
        public string reward_points_balance_to_refund;
        
        /// <remarks/>
        public string reward_salesrule_points;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public string postcode;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionValueUpdateEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string price_type;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string sort_order;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionValueAddEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string price_type;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string sort_order;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionValueListEntity {
        
        /// <remarks/>
        public string value_id;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string price_type;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string sort_order;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionValueInfoEntity {
        
        /// <remarks/>
        public string value_id;
        
        /// <remarks/>
        public string option_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public string default_price;
        
        /// <remarks/>
        public string default_price_type;
        
        /// <remarks/>
        public string store_price;
        
        /// <remarks/>
        public string store_price_type;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string price_type;
        
        /// <remarks/>
        public string default_title;
        
        /// <remarks/>
        public string store_title;
        
        /// <remarks/>
        public string title;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionListEntity {
        
        /// <remarks/>
        public string option_id;
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public int is_require;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionInfoEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public int is_require;
        
        /// <remarks/>
        public catalogProductCustomOptionAdditionalFieldsEntity[] additional_fields;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionAdditionalFieldsEntity {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string price_type;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string max_characters;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public string file_extension;
        
        /// <remarks/>
        public string image_size_x;
        
        /// <remarks/>
        public string image_size_y;
        
        /// <remarks/>
        public string value_id;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionTypesEntity {
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionToUpdate {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public int is_require;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_requireSpecified;
        
        /// <remarks/>
        public catalogProductCustomOptionAdditionalFieldsEntity[] additional_fields;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCustomOptionToAdd {
        
        /// <remarks/>
        public string title;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string sort_order;
        
        /// <remarks/>
        public int is_require;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_requireSpecified;
        
        /// <remarks/>
        public catalogProductCustomOptionAdditionalFieldsEntity[] additional_fields;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductLinkAttributeEntity {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string type;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductLinkEntity {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string set;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string qty;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductImageFileEntity {
        
        /// <remarks/>
        public string content;
        
        /// <remarks/>
        public string mime;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeMediaCreateEntity {
        
        /// <remarks/>
        public catalogProductImageFileEntity file;
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string[] types;
        
        /// <remarks/>
        public string exclude;
        
        /// <remarks/>
        public string remove;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeMediaTypeEntity {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string scope;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductImageEntity {
        
        /// <remarks/>
        public string file;
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string exclude;
        
        /// <remarks/>
        public string url;
        
        /// <remarks/>
        public string[] types;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTypeEntity {
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string label;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeOptionLabelEntity {
        
        /// <remarks/>
        public string[] store_id;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeOptionEntityToAdd {
        
        /// <remarks/>
        public catalogProductAttributeOptionLabelEntity[] label;
        
        /// <remarks/>
        public int order;
        
        /// <remarks/>
        public int is_default;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeEntityToUpdate {
        
        /// <remarks/>
        public string scope;
        
        /// <remarks/>
        public string default_value;
        
        /// <remarks/>
        public int is_unique;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_uniqueSpecified;
        
        /// <remarks/>
        public int is_required;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_requiredSpecified;
        
        /// <remarks/>
        public string[] apply_to;
        
        /// <remarks/>
        public int is_configurable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_configurableSpecified;
        
        /// <remarks/>
        public int is_searchable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_searchableSpecified;
        
        /// <remarks/>
        public int is_visible_in_advanced_search;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_visible_in_advanced_searchSpecified;
        
        /// <remarks/>
        public int is_comparable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_comparableSpecified;
        
        /// <remarks/>
        public int is_used_for_promo_rules;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_used_for_promo_rulesSpecified;
        
        /// <remarks/>
        public int is_visible_on_front;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_visible_on_frontSpecified;
        
        /// <remarks/>
        public int used_in_product_listing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool used_in_product_listingSpecified;
        
        /// <remarks/>
        public associativeEntity[] additional_fields;
        
        /// <remarks/>
        public catalogProductAttributeFrontendLabelEntity[] frontend_label;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeFrontendLabelEntity {
        
        /// <remarks/>
        public string store_id;
        
        /// <remarks/>
        public string label;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeEntity {
        
        /// <remarks/>
        public string attribute_id;
        
        /// <remarks/>
        public string attribute_code;
        
        /// <remarks/>
        public string frontend_input;
        
        /// <remarks/>
        public string scope;
        
        /// <remarks/>
        public string default_value;
        
        /// <remarks/>
        public int is_unique;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_uniqueSpecified;
        
        /// <remarks/>
        public int is_required;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_requiredSpecified;
        
        /// <remarks/>
        public string[] apply_to;
        
        /// <remarks/>
        public int is_configurable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_configurableSpecified;
        
        /// <remarks/>
        public int is_searchable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_searchableSpecified;
        
        /// <remarks/>
        public int is_visible_in_advanced_search;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_visible_in_advanced_searchSpecified;
        
        /// <remarks/>
        public int is_comparable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_comparableSpecified;
        
        /// <remarks/>
        public int is_used_for_promo_rules;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_used_for_promo_rulesSpecified;
        
        /// <remarks/>
        public int is_visible_on_front;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_visible_on_frontSpecified;
        
        /// <remarks/>
        public int used_in_product_listing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool used_in_product_listingSpecified;
        
        /// <remarks/>
        public associativeEntity[] additional_fields;
        
        /// <remarks/>
        public catalogAttributeOptionEntity[] options;
        
        /// <remarks/>
        public catalogProductAttributeFrontendLabelEntity[] frontend_label;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAttributeOptionEntity {
        
        /// <remarks/>
        public string label;
        
        /// <remarks/>
        public string value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeEntityToCreate {
        
        /// <remarks/>
        public string attribute_code;
        
        /// <remarks/>
        public string frontend_input;
        
        /// <remarks/>
        public string scope;
        
        /// <remarks/>
        public string default_value;
        
        /// <remarks/>
        public int is_unique;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_uniqueSpecified;
        
        /// <remarks/>
        public int is_required;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_requiredSpecified;
        
        /// <remarks/>
        public string[] apply_to;
        
        /// <remarks/>
        public int is_configurable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_configurableSpecified;
        
        /// <remarks/>
        public int is_searchable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_searchableSpecified;
        
        /// <remarks/>
        public int is_visible_in_advanced_search;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_visible_in_advanced_searchSpecified;
        
        /// <remarks/>
        public int is_comparable;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_comparableSpecified;
        
        /// <remarks/>
        public int is_used_for_promo_rules;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_used_for_promo_rulesSpecified;
        
        /// <remarks/>
        public int is_visible_on_front;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_visible_on_frontSpecified;
        
        /// <remarks/>
        public int used_in_product_listing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool used_in_product_listingSpecified;
        
        /// <remarks/>
        public associativeEntity[] additional_fields;
        
        /// <remarks/>
        public catalogProductAttributeFrontendLabelEntity[] frontend_label;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAttributeSetEntity {
        
        /// <remarks/>
        public int set_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool set_idSpecified;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductSpecialPriceReturnEntity {
        
        /// <remarks/>
        public string special_price;
        
        /// <remarks/>
        public string special_from_date;
        
        /// <remarks/>
        public string special_to_date;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogInventoryStockItemUpdateEntity {
        
        /// <remarks/>
        public string qty;
        
        /// <remarks/>
        public int is_in_stock;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_in_stockSpecified;
        
        /// <remarks/>
        public int manage_stock;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool manage_stockSpecified;
        
        /// <remarks/>
        public int use_config_manage_stock;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_manage_stockSpecified;
        
        /// <remarks/>
        public int min_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool min_qtySpecified;
        
        /// <remarks/>
        public int use_config_min_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_min_qtySpecified;
        
        /// <remarks/>
        public int min_sale_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool min_sale_qtySpecified;
        
        /// <remarks/>
        public int use_config_min_sale_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_min_sale_qtySpecified;
        
        /// <remarks/>
        public int max_sale_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool max_sale_qtySpecified;
        
        /// <remarks/>
        public int use_config_max_sale_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_max_sale_qtySpecified;
        
        /// <remarks/>
        public int is_qty_decimal;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_qty_decimalSpecified;
        
        /// <remarks/>
        public int backorders;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool backordersSpecified;
        
        /// <remarks/>
        public int use_config_backorders;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_backordersSpecified;
        
        /// <remarks/>
        public int notify_stock_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool notify_stock_qtySpecified;
        
        /// <remarks/>
        public int use_config_notify_stock_qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool use_config_notify_stock_qtySpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class associativeMultiEntity {
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public string[] value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductAdditionalAttributesEntity {
        
        /// <remarks/>
        public associativeMultiEntity[] multi_data;
        
        /// <remarks/>
        public associativeEntity[] single_data;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductCreateEntity {
        
        /// <remarks/>
        public string[] categories;
        
        /// <remarks/>
        public string[] websites;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string short_description;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public string url_path;
        
        /// <remarks/>
        public string visibility;
        
        /// <remarks/>
        public string[] category_ids;
        
        /// <remarks/>
        public string[] website_ids;
        
        /// <remarks/>
        public string has_options;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string special_price;
        
        /// <remarks/>
        public string special_from_date;
        
        /// <remarks/>
        public string special_to_date;
        
        /// <remarks/>
        public string tax_class_id;
        
        /// <remarks/>
        public catalogProductTierPriceEntity[] tier_price;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string meta_keyword;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string options_container;
        
        /// <remarks/>
        public catalogProductAdditionalAttributesEntity additional_attributes;
        
        /// <remarks/>
        public catalogInventoryStockItemUpdateEntity stock_data;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductTierPriceEntity {
        
        /// <remarks/>
        public string customer_group_id;
        
        /// <remarks/>
        public string website;
        
        /// <remarks/>
        public int qty;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool qtySpecified;
        
        /// <remarks/>
        public double price;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool priceSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductReturnEntity {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string set;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string[] categories;
        
        /// <remarks/>
        public string[] websites;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string type_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string short_description;
        
        /// <remarks/>
        public string weight;
        
        /// <remarks/>
        public string status;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public string url_path;
        
        /// <remarks/>
        public string visibility;
        
        /// <remarks/>
        public string[] category_ids;
        
        /// <remarks/>
        public string[] website_ids;
        
        /// <remarks/>
        public string has_options;
        
        /// <remarks/>
        public string gift_message_available;
        
        /// <remarks/>
        public string price;
        
        /// <remarks/>
        public string special_price;
        
        /// <remarks/>
        public string special_from_date;
        
        /// <remarks/>
        public string special_to_date;
        
        /// <remarks/>
        public string tax_class_id;
        
        /// <remarks/>
        public catalogProductTierPriceEntity[] tier_price;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string meta_keyword;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string options_container;
        
        /// <remarks/>
        public associativeEntity[] additional_attributes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductRequestAttributes {
        
        /// <remarks/>
        public string[] attributes;
        
        /// <remarks/>
        public string[] additional_attributes;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogProductEntity {
        
        /// <remarks/>
        public string product_id;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string set;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string[] category_ids;
        
        /// <remarks/>
        public string[] website_ids;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAttributeEntity {
        
        /// <remarks/>
        public int attribute_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool attribute_idSpecified;
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public string required;
        
        /// <remarks/>
        public string scope;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogAssignedProduct {
        
        /// <remarks/>
        public int product_id;
        
        /// <remarks/>
        public string type;
        
        /// <remarks/>
        public int set;
        
        /// <remarks/>
        public string sku;
        
        /// <remarks/>
        public int position;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryEntityCreate {
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_activeSpecified;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool positionSpecified;
        
        /// <remarks/>
        public string[] available_sort_by;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public int custom_design_apply;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool custom_design_applySpecified;
        
        /// <remarks/>
        public string custom_design_from;
        
        /// <remarks/>
        public string custom_design_to;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string default_sort_by;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string display_mode;
        
        /// <remarks/>
        public int is_anchor;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_anchorSpecified;
        
        /// <remarks/>
        public int landing_page;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool landing_pageSpecified;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string meta_keywords;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string page_layout;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public int include_in_menu;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool include_in_menuSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryInfo {
        
        /// <remarks/>
        public string category_id;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        public string position;
        
        /// <remarks/>
        public string level;
        
        /// <remarks/>
        public string parent_id;
        
        /// <remarks/>
        public string all_children;
        
        /// <remarks/>
        public string children;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public string url_key;
        
        /// <remarks/>
        public string description;
        
        /// <remarks/>
        public string meta_title;
        
        /// <remarks/>
        public string meta_keywords;
        
        /// <remarks/>
        public string meta_description;
        
        /// <remarks/>
        public string path;
        
        /// <remarks/>
        public string url_path;
        
        /// <remarks/>
        public int children_count;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool children_countSpecified;
        
        /// <remarks/>
        public string display_mode;
        
        /// <remarks/>
        public int is_anchor;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_anchorSpecified;
        
        /// <remarks/>
        public string[] available_sort_by;
        
        /// <remarks/>
        public string custom_design;
        
        /// <remarks/>
        public string custom_design_apply;
        
        /// <remarks/>
        public string custom_design_from;
        
        /// <remarks/>
        public string custom_design_to;
        
        /// <remarks/>
        public string page_layout;
        
        /// <remarks/>
        public string custom_layout_update;
        
        /// <remarks/>
        public string default_sort_by;
        
        /// <remarks/>
        public int landing_page;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool landing_pageSpecified;
        
        /// <remarks/>
        public int include_in_menu;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool include_in_menuSpecified;
        
        /// <remarks/>
        public int custom_use_parent_settings;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool custom_use_parent_settingsSpecified;
        
        /// <remarks/>
        public int custom_apply_to_products;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool custom_apply_to_productsSpecified;
        
        /// <remarks/>
        public string filter_price_range;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryEntityNoChildren {
        
        /// <remarks/>
        public int category_id;
        
        /// <remarks/>
        public int parent_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        public int level;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryEntity {
        
        /// <remarks/>
        public int category_id;
        
        /// <remarks/>
        public int parent_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int is_active;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        public int level;
        
        /// <remarks/>
        public catalogCategoryEntity[] children;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class catalogCategoryTree {
        
        /// <remarks/>
        public int category_id;
        
        /// <remarks/>
        public int parent_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int position;
        
        /// <remarks/>
        public int level;
        
        /// <remarks/>
        public catalogCategoryEntity[] children;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerAddressEntityCreate {
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public int region_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool region_idSpecified;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public string[] street;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public bool is_default_billing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_billingSpecified;
        
        /// <remarks/>
        public bool is_default_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_shippingSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerAddressEntityItem {
        
        /// <remarks/>
        public int customer_address_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_address_idSpecified;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public string city;
        
        /// <remarks/>
        public string company;
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string fax;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string postcode;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public string region;
        
        /// <remarks/>
        public int region_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool region_idSpecified;
        
        /// <remarks/>
        public string street;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string telephone;
        
        /// <remarks/>
        public bool is_default_billing;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_billingSpecified;
        
        /// <remarks/>
        public bool is_default_shipping;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool is_default_shippingSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerGroupEntity {
        
        /// <remarks/>
        public int customer_group_id;
        
        /// <remarks/>
        public string customer_group_code;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerCustomerEntityToCreate {
        
        /// <remarks/>
        public int customer_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_idSpecified;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string password;
        
        /// <remarks/>
        public int website_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool website_idSpecified;
        
        /// <remarks/>
        public int store_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool store_idSpecified;
        
        /// <remarks/>
        public int group_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool group_idSpecified;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string dob;
        
        /// <remarks/>
        public string taxvat;
        
        /// <remarks/>
        public int gender;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool genderSpecified;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class customerCustomerEntity {
        
        /// <remarks/>
        public int customer_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool customer_idSpecified;
        
        /// <remarks/>
        public string created_at;
        
        /// <remarks/>
        public string updated_at;
        
        /// <remarks/>
        public string increment_id;
        
        /// <remarks/>
        public int store_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool store_idSpecified;
        
        /// <remarks/>
        public int website_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool website_idSpecified;
        
        /// <remarks/>
        public string created_in;
        
        /// <remarks/>
        public string email;
        
        /// <remarks/>
        public string firstname;
        
        /// <remarks/>
        public string middlename;
        
        /// <remarks/>
        public string lastname;
        
        /// <remarks/>
        public int group_id;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool group_idSpecified;
        
        /// <remarks/>
        public string prefix;
        
        /// <remarks/>
        public string suffix;
        
        /// <remarks/>
        public string dob;
        
        /// <remarks/>
        public string taxvat;
        
        /// <remarks/>
        public bool confirmation;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool confirmationSpecified;
        
        /// <remarks/>
        public string password_hash;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class complexFilter {
        
        /// <remarks/>
        public string key;
        
        /// <remarks/>
        public associativeEntity value;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class filters {
        
        /// <remarks/>
        public associativeEntity[] filter;
        
        /// <remarks/>
        public complexFilter[] complex_filter;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class directoryRegionEntity {
        
        /// <remarks/>
        public string region_id;
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class directoryCountryEntity {
        
        /// <remarks/>
        public string country_id;
        
        /// <remarks/>
        public string iso2_code;
        
        /// <remarks/>
        public string iso3_code;
        
        /// <remarks/>
        public string name;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class magentoInfoEntity {
        
        /// <remarks/>
        public string magento_version;
        
        /// <remarks/>
        public string magento_edition;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class storeEntity {
        
        /// <remarks/>
        public int store_id;
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public int website_id;
        
        /// <remarks/>
        public int group_id;
        
        /// <remarks/>
        public string name;
        
        /// <remarks/>
        public int sort_order;
        
        /// <remarks/>
        public int is_active;
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XamarinStudio", "4.0.0.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:Magento")]
    public partial class existsFaltureEntity {
        
        /// <remarks/>
        public string code;
        
        /// <remarks/>
        public string message;
    }
}
